[{"id":35,"title":"test marked","category":"rails","content":"Just one line\n\n```nginx\nserver {\n    server_name bingo.example.com;\n\n    location / {\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header Host $host;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_pass http://10.0.1.x:8765;\n    }\n}\n```\n\n**indented ruby**\n\n```ruby\n  def markdown_text(text)\n    # puts \"MD TEXT #{text}\"\n    if text[0..10].include?(\".slim\")\n      render inline: text, type: :slim\n      # x = MarkupSlim.new(text)\n      # Slim::Template.new{ x.results }.render.html_safe\n\n    else\n      puts \"MD TEXT #{text}\"\n\n      options = {\n        :autolink =\u003e true,\n        :space_after_headers =\u003e true,\n        :fenced_code_blocks =\u003e true,\n        :no_intra_emphasis =\u003e true\n      }\n      markdown = Redcarpet::Markdown.new(Redcarpet::Render::HTML, options)\n      # markdown.render(text).html_safe\n    end\n  end\n```\n","created_at":"2025-02-24T14:11:58.463Z","updated_at":"2025-02-24T14:23:49.470Z"},{"id":34,"title":"why","category":"code","content":".slim\n\ndiv[class=\"text-black m-4\"]\n  p It's been about 6 months since I converted 2 of my 3 \u003cstrong\u003e'hobby'\u003c/strong\u003e apps to Rails 7.0.x. That was a painful experience, mainly because documentation on upgrading Rails 7 and Rails Turbo was fairly sketchy. I documented some of my approach in [Upgrading from Rails 6.x Webpacker to Rails 7 Importmaps](https://dev.to/salex/upgrading-from-rails-6x-webpacker-to-rails-7-importmaps-59jo). Oh my\n\np I then looked at upgrading my last app and tried the approach of creating a new version and copying over stuff in chunks. The app is basically a web site for a VFW post I wrote about 8 years ago. At that time I said I'll build it, but someone else has to populate it (articles, etc). That didn't happen - then Facebook took over. I also had stuff to manage the post's information. This included managing members, reports, etc. I rewrote the app a few years ago concentrating on the managing and reporting. I also added the capability of managing other posts. I tried to demo, sell (give) it to Department of Alabama VFW but they were too busy being bureaucats to look at it. I just configured it to only have one post and started to use it.\n\ncode.ruby\n  class Game \u003c ApplicationRecord\n    serialize :calls, Array\n    GameStatus = %w(current bingo won)\n  end\n\n\np Now the VFW has been around for a long time, and while getting better, I swear their managing info is still done using and old COBOL system. They work on a Fiscal Year and it takes about two weeks to transition to a new FY.\n\np I can download post membership information from the National site that includes contact information a membership status. There are 6 or more different categories that defines the pay status of a member.  I also definded a ?","created_at":"2022-06-04T16:48:31.917Z","updated_at":"2025-02-17T13:09:13.697Z"},{"id":31,"title":"Proposed Rules change","category":"golf","content":"*I'm proposing that we change our rules back to what they were about 6 or so years ago. Steve Alex* \n\n\n###### Definitions\n\n\n* The **Course** is defined as:\n  * Fairways - Closely mowed grass\n  * Greens - Putting surface\n  * Teeing Area\n  * Rough - Occasionally mowed grass higher than the fairways - mowed - not weed whacked\n  * Traps\n  * Water Hazards  - Yellow stacked areas\n  * Penalty Areas - Red stacked areas\n  * Ground Under Repair - Should be marked with white paint, but most aren't!\n\n* **Off the Course** includes: \n  * Out of Bounds\n  * Anything else beyond the Rough that is marked with stacks or not. This is mainly tree lines.\n\n**Proposed Rule: You can move your ball any where on or off the course 1 club length no closer to the hole, except out-of-bounds**\n\n1. The course can have Ground Under Repair areas that include Dirt, Rocks, Sand. Some areas may be marked with white paint, but most areas that should be marked are not. You can move your ball no more than one club length into the rough, no closer to the hole. Rough means where grass starts, not 20 yards to the lush stuff!\n\n2. Out-of-bounds is played as a penalty area - stroke but no distance penalty, unless you feel that is you best option. **You cannot play out of a out-of-bounds area**.\n\n3. If you are in a penalty area (red or yellow staked) or off the course and you can't advance the ball with the 1 club length relief, you always have the option of taking the penalty stroke and move the ball 2 club length laterally from where you entered the penalty area or out-of-bounds. You may also move the ball back as far as you want on a line back from where you entered to hazard, to the pin. Unmarked penalty areas (e.g. tree lines) starts where the rough ends. You must always take the penalty if you are out-of-bounds.\n\n4. If you move the ball, you must pick it up with your hands - no using a getter to retrieve a ball in 2 feet of water!\n\n###### Reason for rule.\nThere currently is no clearly defined rule. I get tired of hearing players asking *Can I move the ball from here?*\n###### Consequences of adopting this rule\nOne club length. The normal club to use is a driver with is about 45 inches. Let just call it *One giant step in Mother May I?* \n\nWhile it sounds enticing if you're 20 yards into the trees right of 11 green and behind a tree. You can move it, but good luck not staying in the woods! The risk/reward may not be in your favor!\n\nIf you are in the ditch in front of 5, 6, 13, 15 you may be able to go from unplayable to risky.\n\n###### Other options\n* You can only movee the ball if you are in the fairway. You play it down everywhere else.\n* You can only move the ball if you are in the fairway or rough. You play it down everywhere else.\n\n###### Vote on moving ball one club length almost anywhere\n_____Yes\n\n_____No\n\n_____Move ball only in fairway\n\n_____Move ball only in fairway or rough\n\n_____Change/Modify suggestion:\n\n\u003cbr/\u003e\n\u003cbr/\u003e\n\u003cbr/\u003e\n\n###### Gimmies\nWe all know the reason for adding the *No gimmies* rule. There's not definition unless you don't allow gimmies.\n\nTypically is slows down the game and we are already playing too slow. The initial proposal was on score card length but it was not adopted.   I feel like an ass putting from 3 inches then having to reach down in a hole with a flag in it to retrieve the ball. (Yea you all going to get old and have balance problems).\n\nI propose 1 foot using the players foot to measure and be accepted by a Team member as **Good!**  I'd say captain, but most captains don't know half of the rules anyhow. I know some players have bigger feet, but they are further away from the ball when putting!\n\n###### Vote on allowing gimmies up to 1 foot with team member confirmation.\n_____Yes\n\n_____No\n\n_____Change/Modify suggestion:\n\n\u003cbr/\u003e\n\u003cbr/\u003e\n\n###### Par3 from same tee and the whole Tee controversy\n\nI have no problem with the concept, ***If you are in the par3 side game***.\nI heard *It's not about the money*, but apparently it is. I don't remember this being extended to the Skins/Birdies side game. There is a misconception that if someone is playing from the Red tees, they are a better, longer, straighter, more consistent player. Nah - they just have more room for error.\n\nWe've seemed to have forgotten that **Points are Points**.  I could go back to the Blue tees and pull 10 points a game, but that wouldn't be much fun for me or my team mates. I could move to the junior tees and pull 26 points, but that would be my points - but I'd feel bad about it. I'm basically a low C player\n\nThe USGA has guidelines on what tee you should play from, but we have not adopted them. The guidelines are based on skill, not **Age** or **Points**. We initially defined what tee you play from by age - which was dumb. Joe and Ralph hit the ball far because they are skilled. Now you have it on points which makes **no** sense.\n\nEveryone should look at the guidelines on the score card. What if we use the first tee, which is a short open hole, and average you drive carry on that hole.\n\n* If your average carry is to the top of the hill (110-100 yards out), your playing the right tee for your skill,\n\n* If your average carry is over hill (70 yards out), your should  move back a tee. \n\n* If you average carry is 140-130 yards out, you should move up a tee.\n\nIf you carry your drive down to that 110-100 mark, the Tee length and Carry length yards are:\n\n* Blue 339 carry 234 \n* White 314 carry 209 \n* Gray 276  carry 171\n* Red 244 carry 139\n\nDriving isn't everything , but it is a good indicator of your skill level. If someone is ending up 50-60 yards out on #1, I hope they feel guilty! I'll restate -  **Points are Points** and you have to pull them consistantly.\n\nWe all play together and we know the skills of others. We have convinced some to move up a tee for various reasons. We should also consider suggesting that some should move back.\n\n###### Vote on removing the adopting USGA guidlines for tee. \n\n* But someone (or committee) should monitor.\n\n_____Yes\n\n_____No\n\n_____Change/Modify suggestion:\n\n\u003cbr\u003e\n\u003cbr\u003e\n\n\n\n\n","created_at":"2022-05-01T12:51:21.119Z","updated_at":"2022-06-06T01:05:07.140Z"},{"id":30,"title":"Rails jquery ajax","category":"rails","content":"\n\nSo I've been working on a new Rails application, iCash. Actually I've make numerous attempts at writing a web based accounting system. Most of them were just reporting (read only a GnuCash sqlite3 file). This one steals GnuCash concepts and reads and writes i.e, i'm thinking of getting rid of GnuCash and all the save-as copy restart, etc. to do the reporting.\n\nIt may not go anywhere, like most of my stuff - it just keeps me busy, but it has progressed further than I though. Now in cleanup and putting bells and whistles on it.\n\nSame simple concept:\n\n\n\n```ruby\n  class Account \u003c ApplicationRecord\n    attribute :transfer\n    has_many :splits\n    has_many :entries, through: :splits\n  end\n\n  class Entry \u003c ApplicationRecord\n    has_many :splits, dependent: :destroy, inverse_of: :entry\n    validate  :balanced?\n    accepts_nested_attributes_for :splits, \n      :reject_if =\u003e  proc { |att| att['debits'].blank? \u0026\u0026 att['credit'].blank?  \u0026\u0026 att['account_id'].to_i.zero?},\n      allow_destroy: true\n  end\n\n  class Split \u003c ApplicationRecord\n    belongs_to :entry, inverse_of: :splits\n    belongs_to :account\n    attribute :debit, :integer\n    attribute :credit, :integer\n  end\n```\n\nYour have an account list (a hierarchical tree ) as  the main index page. That has links to Accounts which go to the show page. The show page is basically a general ledger. From there you can do all the CRUD stuff. Add new Entries, edit, delete, clear, balance, etc, etc.\n\nSo Bells and Whistles caused me about 10 hours of wasted time doing something I've done a hundred times - Refreshing part of the ledger with an ajax call (.e.g, get a ledger for a different month, date range). Now it has probably been over a year since I so I had to go find an example and more or less clone it. \n\n\nThe main reason for the ajax refresh is that I have a date picker that defines the range of dates to look for. That would be accessed by a select tag that on change would call a JS event.\n\n```coffee\n$('[data-behavior=\"select_data_url\"]').change (e) -\u003e\n  tag = $(this)\n  url = this.value\n  if url.includes(\"fromto=1\")\n    # console.log \"got a custom date\"\n    from_date = $('#from_date').val()\n    to_date = $('#to_date').val()\n    if from_date is ''\n      alert \"From date is Empty\"\n      return false\n    if to_date is ''\n      alert \"To date is Empty\"\n      return false\n    url = url.replace('fromto=1',\"from=#{from_date}\u0026to=#{to_date}\")\n\n  location.assign(url)\n```\n\nYeah, should change it to an on event, but okay for now. Figured the only thing I had to do was change the last line to an ajax call.\n\n```coffee\nurl = url.replace('?','.js?')\n\n$.ajax\n    url: url\n```\n\nThen had to add a 'show.js.erb' file that the account controller would call for a .js format.\n\n```js\n$('#ledger').html('\u003c%= escape_javascript(render partial: \"accounts/ledger\",locals:{from:@from,to:@to,account:@account}) %\u003e');\n```\n\nDamn thing would not work. I added debugging and all kinds of thing but it just would not work. I could see all the actions taking place in the console, rendering stuff and no errors, but the ledger did not change! Went to half sleep and got up about 4 and tried again with more debugging. Lots of 'Why?' on console and rails debugging.\n\nAbout 5, it hit me!!! I was replacing the #ledger html with the call. For some strange reason (probably copy and paste) I had the ledger div id as 'Ledger' instead of 'ledger'. Boom! It worked and I was happy.\n\n##### But happiness does not last long. \n\nIn the default ledger display, lets say the checking account, all Entries with more that two splits displays the Entry description as a '--Split Transaction--' link, which clicking will open up the split rows. Worked fine until I refreshed the ledger with an ajax call.\n\nNow this is nothing new with jquery UJS,  just have to do the right event binding.\n\n```coffee\n$('#ledger').on \"click\",\".toggle-splits\", (e) -\u003e\n\n# instead of \n$('#ledger .toggle-splits').click (e) -\u003e\n\n```\n\nI tried to open a split and it would not open. Another couple of hours of searching my archives and goggling the problem I found the problem and possible solution.  That's why I'm writing this post, so I don't have to look then copy and paste.\n\nThe original Coffee code for clicking the split link was\n\n```coffee\n$('.toggle-splits').on 'click', (e) -\u003e\n  td = $(this)\n  tb = td.closest('tbody').next().toggle()\n```\n\nWhich was pretty bad to begin with, since it searched the entire DOM. so I changed it to\n\n```coffee\n$('#Ledger').on \"click\",\".toggle-splits\", (e) -\u003e\n  td = $(this)\n  tb = td.closest('tbody').next().toggle()\n```\n\nDamn thing didn't work (notice the uppercase Ledger was used). After more searching, I found a comment on a problem that was the solution, not an answer. Most answers where the same as what I had.\n\nThe problem is that I replaced #Ledger with the new ledger, that wiped out all UJS that was based on #Ledger. What I had to do was start from something that was not replaced. I just added a #ajax id to the parent of #Ledger and all worked.\n\n\n```coffee\n$('#ajax').on \"click\",\".toggle-splits\", (e) -\u003e\n  td = $(this)\n  tb = td.closest('tbody').next().toggle()\n```\n\nNow I can go off and figure out what else I forgot!\n\n\n\n.md","created_at":"2018-09-11T11:45:00.000Z","updated_at":"2018-09-11T11:45:00.000Z"},{"id":29,"title":"Demo Server","category":"code","content":"\n\nI seem to work in a lot of different directions (going all over the place!). I'll get bored and start on a new 'I think I can do that'. I'll do some stuff, then either get bored with it or refine the initial concept. Since I live in a low-tech area (Gadsden Alabama), I rely on my former co-workers the give me feedback on my latest brain-fart. I can pretty much tell if the brain-fart if worthless by that feedback. Nothing is totally worthless - sometimes a technique (kludge! Idea!) has promises, maybe in another area.\n\nTo get that feedback, I'd usually publish the demo on a Rails development application binded to some port on 0.0.0.0 (rails s -p 8765 - b 0.0.0.0). I'd open the port on my router and forward it to my laptop. While that works, it opened up my laptop to port scanners and then, if I was getting some non-techie to look at it, they'd get confused: Why I was asking them to go to http://mydomain.us:8765? I thought you could just do www.xyz.com! If I got serious about the brain-fart I'd deploy the application to a staging server (Linux or my MacMini). Of course I'd have to remember how to deploy the application. \n\nA recent brain-fart was a Bingo Controller Rails application. As proof of concept, I loaded up a RaspberryPI with rails and ran it on the PI. It actually ran quite well, but I was still opening up ports. I then remembered that I used Nginx on the MacMini to act as a front-end to a staging server. If I got more serious about the brain-fart, I'd put it on a VPS. So all this post is going to do is remind me how I did this and maybe someone else can use the technique. Over the years I've set up all kinds of tools to support me, but I seen to forget why and how I did it. Even in the RaspberryPI brain-fart I set up, it just used file copies to move the application to the PI. That was pretty stupid in that I had set up a Git repository server to handle my Real applications. How I set up my git server is forgotten, if you google 'set up git server' there are numerous ways and I may have to change mine. Think I had set it up using git protocol, but I really just use ssh.\n\nThe basic set up is:\n\n* A Rails development environment (my laptop). Set up with all the usuals (rbenv). Brain-farts usually start with a basic scaffold application with my standards (slim, maybe SimpleForms, jQuery and Foundation)\n\n* A Git Repository. I used the Gist [Setting up a Remote Repository and Doing Initial Push](https://gist.github.com/steveclarke/1411146) to remember what I did. I assume that your router port forwards 22 and 443 to a server. I could have used GitHub, but I don't have a private account and don't want to put what may be crap on my public account.\n\n* A domain that points to your router\n\nSetup remote repository:\n\n```bash\n  ssh git@example.com\n  mkdir my_project.git\n  cd my_project.git\n  git init --bare\n```\n\nOn local machine:\n\n```sh\n  cd my_project\n  git init\n  git add *\n  git commit -m \"Initial commit\"\n  git remote add origin example.com:my_project.git\n  git push -u origin master\n```\n\n\n\n* Nginx running someplace on your network.  Again, assuming your router is port forwarding port 80 to this machine. But then you can use another port if whoever you're asking to look at the demo can understand :port on a URL.\n\n\nThat's it\n\nI'll step through the Bingo Controller application life cycle to give a little more detail. Bingo started as a single table application.\n\n##### The Games\n\n```ruby\ncreate_table \"games\", force: :cascade do |t|\n  t.string \"status\"\n  t.string \"calls\"\n  t.string \"pattern\"\n  t.datetime \"created_at\", null: false\n  t.datetime \"updated_at\", null: false\n  t.string \"game_status\"\n  t.index [\"status\"], name: \"index_games_on_status\"\nend\n```\n\n##### The Model\n\n```ruby\nclass Game \u003c ApplicationRecord\n  serialize :calls, Array\n  GameStatus = %w(current bingo won)\nend\n```\n\nI later added a User model and Pattern model but the content of the application is not needed, it just has a controller that Adds (or controls) calls and a display that shows the current status of the game. The initial application will be developed and tested on my laptop.\n\nWhen I decide I want to publish the Demo\n\n* Create the git repository and push the application to the repository (see above)\n\n* ssh into where I'm going to run the demo and get it running (assuming ssh keys set up)\n\n```sh\n  ssh user@demo.local # or user@10.0.1.x\n  cd apps\n  git clone developer@example.com:/Users/developer/repo/bingo.git bingo\n  cd bingo\n  bundle exec bundle \n  # could have version problems. Might have to also do a migration of copy over/create a development.db\n  rails s -p 8765 - b 0.0.0.0  #get rails running\n  # use browser to see if it is up (http://10.0.1.x:8765)\n```\n\n* ssh into your web server (where port 80 goes to)\n\n```sh\n  ssh developer@example.com # or user@10.0.1.x\n  # cd to your nginx config directory (example homebrew on a mac)\n  cd /usr/local/etc/nginx/sites-enabled\n```\n\n* create a nginx file in sites-enabled to handle the demo. I setup nginx to respond to subdomain with proxy forward to machine on local network\n\n```nginx\nserver {\n    server_name bingo.example.com;\n\n    location / {\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header Host $host;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_pass http://10.0.1.x:8765;\n    }\n}\n```\n\nUse browser to see if you can get to http://bingo.example.com\n\nYou be done!\n\nNow don't do like I first did, make changes on the demo instead of the laptop and try to figure out how to merge them. Just use git.\n\n* Something needs fixed or added.\n* make changes and git commit\n* ssh to the demo machine and the demo app\n* git pull\n\nYour've made the changes\n\n## OK that semi worked but I'm changing....\n\nI ran into problems. I moved most demo to a MacMini.  Then I found out that HFS filesystem had problems running a rails development mode as a daemon with large (not really too big) assets. The file watcher/spring was spawning to many processes and startup was not complete.\n\nAfter a few days of band-aiding the problem, I figured out the best thing I could do was to run it in production and just do a hand deploy.\n\nNo changes required on basic Rais 5 code. Make sure the config/environments/production.rb has the following default lines:\n``` ruby\n  # Disable serving static files from the `/public` folder by default since\n  # Apache or NGINX already handles this.\n  config.public_file_server.enabled = ENV['RAILS_SERVE_STATIC_FILES'].present?\n```\n\nTo run in production, you'll have to have a production db.  Most demo's just use sqlite3, so its just a deplicate and rename. For Postgres, its just a pg-dump and psql -d production_x_X \u003c  dumped.sql.\n\nI put in a startdemos.sh script in my apps directory for now to start up all demos at one time, but you only set two ENV variables and run a few commands. This is just a short version of what Capistrono does an a deploy.\n\n``` ruby\n#!/bin/bash\n#startdemos.sh script to start any rails demo apps on restart\n\nexport SECRET_KEY_BASE=353f180d1222c8f187e0eae474ad88c8048821a23109a2b1bef76cf3b7a4af84a446cf38ecddb7d27b15452855f728a56a6c7ef51ab926faa3d0542da442a8be\n# recompile assets for any new pull. clobber assets before pull\n# same secret_key_base used for all demos\n\ncd /Users/developer/apps/bingo\nbundle exec bundle\nrake assets:clobber\nexport RAILS_SERVE_STATIC_FILES=true\nrake assets:precompile\nrails s -p 8602 -e production -b 0.0.0.0 -d\n\ncd /Users/developer/apps/icash\nbundle exec bundle\nrake assets:clobber\nexport RAILS_SERVE_STATIC_FILES=true\nrake assets:precompile\nrails s -p 8603 -e production -b 0.0.0.0 -d\n\ncd /Users/developer/apps/myvfw\nbundle exec bundle\nrake assets:clobber\nexport RAILS_SERVE_STATIC_FILES=true\nrake assets:precompile\nrails s -p 8600 -e production -b 0.0.0.0 -d\n\n\n# if you are going to just stop/start on demo, do the above in steps\n\n# ps aux | grep demo\n\n# from the list find the process of what your going to update from the ps list\n# kill 26322\n\n# cd to that app and clobber the assests so git pull won't complain\n# rake assets:clobber\n# git pull\n\n# now just cut and paste (or type) any of the above commands\n\n```\n\n\n\n\n.md","created_at":"2018-03-20T11:45:00.000Z","updated_at":"2022-04-23T20:52:36.170Z"},{"id":27,"title":"Using GnuCash for VFW Accounting","category":"code vfw","content":"\n.row.marked.slim\n  .small-12.columns\n    h5.post-title.strong Using GnuCash for VFW Accounting\n    p Well they do! VFW Quartermasters are required to keep Post accounting books. Procedures only address manual/paper ledgers and reports. This is fine for a small Post that only writes a few checks a month. Automated ledgers are allowed, but paper backup is required.\n\n    p I was not about to use a paper ledger and decided to use GnuCash (http://gnucash.org) several years ago. GnuCash is a full fledged double entry accounting system somewhere between Quicken and Quickbooks and it's free! \n    p I had developed a Rails Web Based system to help me with my Quartermaster tasks, but is was fairly customized, including my interface to the GnuCash data.\n    p GnuCash was set up to use the VFW's version of Fund Based Accounting. This became fairly simple and could be used by any Post or any organization that uses fund based accounting (most non-profit organizations)\n    p \n      | I'll point out that we do not use GnuCash as our main accounting system, although we could.  We have an Accountant that handles mainly payroll and taxes and we send them the information they need (in reports or source documents). We basically use it as a checkbook, fund manager and enter stuff from the accountant (payroll checks, eft or forms to pay taxes etc). I also summarize income and expense from our customized post management system (sales, donations, etc).\n\n    |{% include components/output.html %}\n\n\n\n\n\n.slim","created_at":"2018-01-11T16:10:00.000Z","updated_at":"2022-04-23T19:59:15.356Z"},{"id":26,"title":"Change Agent Regrets","category":"thoughts","content":"Have I been successful? Sure, but it could have been better.\n\nI've often described myself as a change agent. In almost every job I've ever had, someone gave me a task and while I learned how to do that task, it usually concluded that \"There has to be a better way to do this\". I've spent much of my life trying to improve a task or process for someone else.  Maybe I should of worked on improving ME, because, while I had successes, I rarely made it to where I thought it should have gone.\n\nThis probably goes back to my poor communication skills, but CHANGE IS HARD and most people don't want to change.\n\nI though I'd write a book about it(ha ha), but then maybe just a few posts on efforts that I felt should have been taken the next step.\n\nMaybe an outline on how I got here.\n\n*  Childhood\n    *  School\n    *  Interests\n*  Air Force - Mechanic\n    *  Tech School\n    *  Field Maintenance\n    *  Shemya\n    *  Brief exit\n    *  F4's\n*  College\n    *  Victory Valley and Mesa\n    *  ASU\n* Air Force - Navigator\n\n\n\n\n\n\n\n\n\n.md","created_at":"2017-10-30T01:10:00.000Z","updated_at":"2022-05-12T12:10:37.013Z"},{"id":25,"title":"Shuffling and Stacking the Deck","category":"rails","content":"\n\nI mentioned that I considered myself a slightly above average programmer. That maybe a stretch with Ruby. I don't know Ruby as good as I should for the amount of time I've been using it. With the exception of GOTOs, you can write Ruby code that looks like BASIC - full of IF ELSE's that tunnel down into an unreadable, unmanageable mess. I started that way, but I have gotten a lot better.\n\nIn my many versions of my golf group management application (PtGolf or GolfGaggle) I've spent an exorbitant amount of time in three areas:\n\n* Forming Teams\n* Scoring Teams\n* Paying Teams\n\nI'll deal with forming teams. If you play with a group that keeps scores by a “Points\" scoring method, you usually play with more than your normal foursome, and the game is usually  between teams. Even though the point system should allow me to have a competitive game with Tiger Woods, the trend is to make up teams that are as equal has you can (damn liberals!). Equal being not all the best or worst players are on the same team, but a mixture of what is often referred to as A, B, C and D players.  A's being the players who have the lowest handicap (or highest points to pull) and D's being the highest handicappers (lowest points to pull).  So how do you do that?  I’ve tried many ways in the past that worked, but in looking at the code several months after I wrote it, I wondered “How in the hell does this work???\".  The last few attempts of refactoring the concept I've zeroed in on a \"Deck of Cards\" analogy.\n\nYears ago, when golf was thriving at a course I played at, we'd have 3 or 4 ABCD scrambles a year where nearly 100 players would sign up. You didn't play with you normal group, you had an ABCD draw.  After registering you'd get half of a raffle ticket. The course would take the other half and put them into 4 buckets (A, B, C and D) based on your handicap. (they had to do some form of sorting!).\n\nThe course would draw an A ticket and then the A player would draw a tickets from the other three buckets. That was a team. This was also a little bit of a social event in that everyone was gathered for the drawing. Let's say Benny was the A player called to draw his team - there would be a hush because Benny was an asshole - hope he doesn't pick me. When Mike was drawing it was the opposite reaction - hope he picks me. The teams would be picked and everyone played with people they may have not known, but most had a good time (except Benny’s team - if he was his normal self!).\n\nThe group I played with at that time used a similar technique.  When you showed up and paid your dues, there'd be a number by your name.  Either before or after the game you'd use numbered cards or poker chips to draw the teams.\n\nThe ABCD draw was a semi-random draw. The A player may have drawn the best (or worst) B, C and D players. Again, it should not make any difference, but we can stack the deck so that does not happen. Lets say we have 16 players show up for a game.  Nice number - 4 foursomes. Using a 16 cards numbered from 1 to 16 I can do this:\n\n1. Layout cards in order: [1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16]\n2. Divide cards into 4 groups: [1 2 3 4] [5 6 7 8] [9 10 11 12] [13 14 15 16]\n3. Reverse the order of the 2nd and the 4th group: [1 2 3 4] [8 7 6 5] [9 10 11 12] [16 15 14 13]\n4. Draw one card from each group in order into 4 groups/teams: [1 8 9 16] [2 7 10 15] [3 5 11 14] [4 5 12 13]\n\nThis would be a 'seeded' draw. The highest A player plays with the lowest B player, the highest C player and the lowest D player.\n\nWe could also do an ABCD draw. Just draw at random one card from each group.\n\nHow about just a random draw?  Shuffle the cards first, then divide into the four groups and draw one from each group.\n\nThen there's what I call and ABCD Battle. To prove that Points are Points. Make up the teams using #2 above where the A players are team 1 and the D players are team 4. If you put your money on the A players will always win, or the D players will always win - you'd probably lose three out of four times - that's why they call it Golf!\n\nIf only 14 players show up there still would be 4 teams, but there would be 2 threesomes and 2 foursomes. Just a slight change in the concept:\n\n1. Layout cards in order: [1 2 3 4 5 6 7 8 9 10 11 12 13 14]\n2. Divide cards into 4 groups: [1 2 3 4] [5 6 7 8] [9 10 11 12] [13 14]\n3. Reverse the order of the 2nd and 4th group: [1 2 3 4] [8 7 6 5] [9 10 11 12] [14 13]\n3. Since groups are not even, save of odd group: [14 13]\n4. Teams.times, draw one card from remaining group in order: [1 8 9] [2 7 10] [3 5 11] [4 5 12]\n5. Either random pop from saved group or place in highest seeds: [1 8 9 14] [2 7 10 13] [3 5 11] [4 5 12]\n\n\nThe above technique is turned into the class Forming below. Method 'options' returns the valid forming options based on the number of players that show up.  Method 'new_suffle' forms the teams based on the option picked. The array 'teams' is then mapped to players participating in the event that are sorted by their quota (how many points they have to pull).\n\n```ruby\nclass Forming\n\n  attr_accessor  :numb_players,:teams, :options, :numb_teams\n  TeamMethods = [:individuals,:twosomes,:threesomes,:foursomes,:mixed34,:mixed23,:assigned]\n  FormingMethods = [:seeded,:random,:draw,:abcd_battle]\n\n  def options(numb_players)\n    @numb_players = numb_players\n    @options = {}\n    TeamMethods.each do |method|\n      response = send(method)\n      @options[method] = response if response.present?\n    end\n    @options\n  end\n\n  def new_shuffle(team_option,numb_players,forming_method)\n    @teams = nil # default to error - highly unlikly in production - mainily for testing\n    team_option = team_option.to_sym # comes in as string from form\n    forming_method = forming_method.to_sym # comes in as string from form\n    return nil unless valid?(team_option,forming_method)\n    @numb_players = numb_players\n    cards = stack_deck(team_option,forming_method) # also sets numb_teams\n    return cards if cards.nil? # error with team_options for number of players\n    return teams if teams.present?  # team options was indivdual or assigned, no seeding needed\n    abcd = set_seeds(cards)\n    send(forming_method,abcd) # sets teams from seeds based on method\n    teams.sort! { |x,y| x.count \u003c=\u003e y.count }\n    teams.each{|t| t.sort!}\n    return teams\n  end\n\n  private\n\n  def valid?(team_option,forming_method)\n    valid = TeamMethods.include?(team_option) \u0026\u0026 FormingMethods.include?(forming_method) \n  end\n\n  def stack_deck(team_option,forming_method)\n    cards = (1..numb_players).to_a\n    cards.shuffle! if forming_method == :random\n    option = send(team_option)\n    return option if option.blank?\n    @numb_teams = option.map{|k,v| v}.sum\n    if numb_teams == numb_players # team options was indivdual or assigned, no stacking needed\n        @teams = players.mao{|p| [p]}\n    end\n    cards\n  end    \n\n  def set_seeds(cards)\n    abcd = []\n    numb_teams.times{abcd \u003c\u003c cards.shift(numb_teams)}\n    abcd \u003c\u003c cards # There may be more cards (6 players threesomes 2 teams)\n    abcd.delete([])\n    abcd\n  end\n\n  def seeds_to_teams(abcd)\n    @teams = []\n    @numb_teams.times{@teams \u003c\u003c []}\n    if abcd.first.count != abcd.last.count\n      @last_seed = abcd.pop\n    end\n    abcd.each do |seed|\n      0.upto(@numb_teams - 1) do |t|\n        @teams[t] \u003c\u003c seed.shift\n      end\n    end\n    if @last_seed.present?\n      dplayers = (0..(@numb_teams -1)).to_a.sample(@last_seed.count)\n      dplayers.each{|i| @teams[i] \u003c\u003c @last_seed.pop}\n    end\n    @teams.sort! { |x,y| x.count \u003c=\u003e y.count }\n  end\n\n  # this are the forming methods. They modify the stacked deck if needed\n\n  def seeded(abcd)\n    # highest A player get lowest B and D players and highest C player\n    # lowest A player get highest B and D players and lowest C player\n\n    abcd.each_with_index do |t,i|\n      unless (i % 2).zero?\n        t.reverse!\n      end\n    end\n    seeds_to_teams(abcd)\n   end\n\n  def random(abcd)\n    # cards already shuffled if random forming\n    seeds_to_teams(abcd)\n  end\n\n  def draw(abcd)\n    # A players draw random B,C and D players\n    abcd.each_with_index do |t|\n      t.shuffle!\n    end\n    seeds_to_teams(abcd)\n  end\n\n  def abcd_battle(abcd)\n    # Teams made up of A,B,C, and D players. It points, I should be able to compete with Tiger Woods\n    players = abcd.flatten\n    seeds_to_teams(abcd) \n    nteams = []\n    @teams.each do |t|\n      nteams \u003c\u003c players.shift(t.count)\n    end\n    @teams = nteams\n  end\n\n  # Following methods define the valid team makups that are possible based on the number \n  # of players participating in an event/game. All these methods are called form the options\n  # method that provides the valid options. The method selected from method new_suffle is\n  # called to validate the option\n\n  def individuals\n    # number of teams = numbe of players - individual play\n    {individual:numb_players}\n  end\n\n  def assigned\n    # group makes up their own teams \n    {assigned:numb_players}\n  end\n\n  def twosomes\n    return nil if numb_players \u003c 4\n    numb_players.modulo(2).zero? ? {twosome:numb_players / 2} : nil\n  end\n\n  def threesomes\n    return nil if numb_players \u003c 6\n    numb_players.modulo(3).zero? ? {threesome:numb_players / 3} : nil\n  end\n\n  def foursomes\n    return nil if numb_players \u003c 8\n    numb_players.modulo(4).zero? ? {foursome:numb_players / 4} : nil\n  end\n\n  def mixed23\n    return nil if twosomes.present? || foursomes.present? || numb_players \u003c 5\n    s3 = (numb_players / 3) - (3 - numb_players.modulo(3)) + 1\n    return nil if s3*3 == numb_players\n    s2 = (numb_players - (s3 * 3)) / 2\n    {twosome:s2,threesome:s3}\n  end\n\n  def mixed34\n    return nil if foursomes.present? || numb_players \u003c 7\n    s4 = (numb_players / 4) - (4 - numb_players.modulo(4)) + 1\n    return nil if s4*4 == numb_players || s4.zero?\n    s3 = (numb_players - (s4 * 4)) / 3\n    {threesome:s3,foursome:s4}\n  end\n\nend\n```\n\nMy problems with this in the past is my 'Old School' background.  I knew some of what needed to be done so I started to code.  Then something didn't work and I started adding conditions.  This is still not pure, but I'll show you one of the past version if you'd like!\n\n\n\n\n\n\n.md","created_at":"2017-02-23T02:10:00.000Z","updated_at":"2017-02-23T02:10:00.000Z"},{"id":24,"title":"Stash Kludge","category":"rails","content":"\n\nI hate to start off by talking about a kludge from my \"old school\" programing background, but it's something I've used as a prototyping tool that sometimes found it's way into production. \n\nI have to start with a short story about the 15 years or so I had to deal with [4D (4th Dimension, or Silver Surfer)](https://en.wikipedia.org/wiki/4th_Dimension_(software)). A powerful Macintosh tool from the 80's, but a horrible language and implementation. I could spew all kinds of reasons I hated 4D but I'll limit it to why I came up with the \"Stash\" technique. \n\n4D was a compiled language. Everything was self contained in a MacIntosh resource. There was no version control, just the developers version. I didn't write in 4D, but I took over a web presence by using a plug-in Active4D. Active4D was more or less a PHP like language that interfaced with the 4D structure. My developer controlled the structure and if he was working on a new feature, I couldn't do anything for sometimes months until a new compiled version was released. I was under pressure to release a web based application and my 4D developer was under pressure to release new GUI applications - not a good mix. I forced a new release with a **Documents** table that in Rails terms was a polymorphic table. I had generic fields for IDs, keys, and most of 4Ds basic data type. I used that table to link new data fields to other records until we could get them added to the structure. Unfortunately some of that stuff is probably still out there, but just like Rails polymorphic tables, it worked and there is sometimes a need to store persistent data somewhere.\n\nI've used the concept of a Stash in several projects, maybe because I'm \"old school\", maybe because I was still prototyping and didn't know what data I needed, or just because! The Stash model is a combination of a Single Table Inheritance,  Polymorphic stashable relations and YAML serialization. Talk about a kludge!  \n\n##### The Table\n\n```ruby\ncreate_table \"stashes\", force: :cascade do |t|\n  t.string   \"stashable_type\"\n  t.integer  \"stashable_id\"\n  t.string   \"type\"\n  t.date     \"date\"\n  t.text     \"hash_data\"\n  t.text     \"text_data\"\n  t.datetime \"created_at\",     null: false\n  t.datetime \"updated_at\",     null: false\n  t.index [\"stashable_type\", \"stashable_id\"], name: \"index_stashes_on_stashable_type_and_stashable_id\", using: :btree\n  t.index [\"type\"], name: \"index_stashes_on_type\", using: :btree\nend\n```\n\n##### The Model\n\n```ruby\nclass Stash \u003c ApplicationRecord\n  belongs_to :stashable, polymorphic: true\n  serialize :hash_data, Hash\nend\n```\n\n##### An example of using Stash as a STI model\n\n```ruby\nclass UpcomingEvents \u003c Stash\n\n  def events\n    self.hash_data\n  end\n\n  def events=(event)\n    self.hash_data = event\n  end\nend\n```\n\nThis use of Stash stores or retrieve upcoming iCalendar events for some entity. The entity defines and controls updating or refreshing of the events. \n\n##### An example of using Stash to store preferences/options for model (has_one :group_options)\n\n```ruby\nclass GroupOptions \u003c Stash\n\n def options=(params)\n   self.data = self.normalize_options(self.options.merge(params))\n end\n\n def option_types\n   types = {\n     par_in: :string,\n     par_out: :string,\n     welcome: :text,\n     alert: :text,\n     notice: :text,\n     tee_time: :string,\n     play_days: :string,\n     dues: :integer,\n     skins_dues: :integer,\n     par3_dues: :integer,\n     other_dues: :integer,\n     truncate_quota: :boolean,\n     pay: :string,\n     limit_new_player: :boolean,\n     limit_rounds: :integer,\n     limit_points: :integer\n   }.with_indifferent_access\n end\n\n def options\n   attrib = {\n     par_in:\"443455435\",\n     par_out:'453445344',\n     welcome:\"Welcome to #{self.name}\",\n     alert:'',\n     notice:'',\n     tee_time:'9:30am',\n     play_days:'Mon, Wed, Fri',\n     dues:6,\n     skins_dues: 0,\n     par3_dues: 0,\n     other_dues: 0,\n     truncate_quota:true,\n     pay:'sides',\n     limit_new_player:false,\n     limit_rounds:1,\n     limit_points:2\n   }.with_indifferent_access\n   # merge with current data in case new attribute add\n   normalize_options(attrib.merge(self.data))\n end\n\n def normalize_options(params)\n   types = self.option_types\n   params.each_pair do |k,v|\n     if types[k] == :integer\n       params[k] = v.to_i\n     elsif types[k] == :boolean\n       params[k] = (v.to_s =~ /^[Tt1].*$/i) == 0\n     end\n   end\n   # renames or deletes if required during prototype\n   x = params.delete(:skin_dues)\n   params[:skins_dues] = x unless x.nil? #rename\n   # params.delete(:not_used_anymore) #delete\n   params\n end\n```\n\nI've used this in prototyping, where everything we need may not be totally defined. When there is agreement, this can be moved to or a table. Think of it as a temporary table! I've also used the methods is a model that had a serialized field. You do have to require the hash params, for example:\n\n``` ruby\ndef group_params\n  params.require(:group).permit(:name, :rounds_used, :use_hi_lo_rule, \n  :club_id,:tees, options: Group.new.options.keys)\nend\n\n```\n\n\n\n\n\n\n\n\n\n\n\n.md","created_at":"2017-02-21T02:10:00.000Z","updated_at":"2017-02-21T02:10:00.000Z"},{"id":23,"title":"My Rails Projects","category":"rails","content":"\n\nMy work folder contains over 100 Rails applications! Granted most of them never went anywhere. They start at Rails v0.8 and go up to the current release. Most of the applications were never planned to go beyond a limited user base. They were custom solutions for a user, agency or group that had unique requirements.\n\nNot only do I wish I could write English better, I wish I was a better programmer. Programming has always been an \"Additional Duty\" for me. I did it because know one else knew how. This whole trip started with a Fortran class at Arizona State in 1970, then we go through:\n\nBasic \u0026bull; Assembler \u0026bull; Forth \u0026bull; Pascal \u0026bull; Real Basic \u0026bull; C \u0026bull; COBOL \u0026bull; Smalltalk \u0026bull;  PHP \u0026bull;  Ada \u0026bull; Forth Dimension \u0026bull; Active4D  \u0026bull; Ruby\n\nThink I'm missing a few, but that's enough. In all that time I never had a job where I had to code - but I was responsible for code being written by someone a number of times. I've seen the good, the bad and the ugly in programming styles. Just like my golf game, I'll call myself a little above average. My weakness is I'm an 'Old School' programmer - get an idea and start writing code. I can't get my head around testing - I've tried - but failed. Because I've picked up this side knowledge I always been sort of a change agent or problem solver. I see how something is done and think how it can be done better. Doesn't always work but _**anything**_ can be done better. If I couldn't get anyone to implement the idea, I did it myself. There is some crappy code I wrote years ago that is still out there. That's a story for another time. Most of the applications I worked on were _**Bean Counter**_ applications, i.e. some form of accounting. Not always money, but counting, computing and reporting something. \n\nBesides some of the crap that is still out there, I have two active deployed applications.\n\n\u003cdl class=\"indent-dd\"\u003e\n  \u003cdt\u003e\u003ca href=\"http://vfwpost8600.org/\"\u003eVFWPost8600.org\u003c/a\u003e\u003c/dt\u003e\n  \u003cdd\u003e\n    This was one of those things where after I became involved in the VFW, someone said \"We need a web site\". I said I'd build it but don't ask me to write the content. It's now on it's third re-write in 4 years.  The first was a prototype, the second one was to take out my kludges and the current one was a refactoring and throwing out what wasn't used (know one wrote content) and concentrated on the back-end bean counting.\n  \u003c/dd\u003e\n  \u003cdd\u003e\n    The public view is a very basic \"who we are\" site, contacts, members etc. The back-end runs the business. Since I and our canteen manager run the business, it's a very targeted for us. There is another version out there that will never go anywhere \u003ca href=\"http://myvfw.us/\"\u003eMyVFW.us\u003c/a\u003e. Some of the back-end is reporting activities to the State and National VFW organizations. I tried to give it to the state or national but could never get anyone to stop worrying about all the paper reports they had to submit long enough to give it a serious look! (I did spend 22 years in the Military bureaucracy and 20 in the State of Alabama bureaucracy, the VFW is just as bad)\n  \u003c/dd\u003e\n\u003c/dl\u003e\n\n\u003cdl class=\"indent-dd\"\u003e\n  \u003cdt\u003e\u003ca href=\"http://ptgolf.us/\"\u003ePtGolf.us\u003c/a\u003e\u003c/dt\u003e\n  \u003cdd\u003e\n    This is my \"Learn an new Language\" application. PtGolf stands for Point Golf. It an application that manages golf scores for golf groups. Points are a simplified version of a golf handicap. It allows golfer to compete fairly in events between player with different skill sets. Its really noting more than averaging you last X scores (usually 10) to compute a quota. If you pull your quota (score=quota) you've had an ok day. If you pull more than your quota you had a good day (and your quota will go up). If you pull less than your quota, you had a bad day.\n  \u003c/dd\u003e\n  \u003cdd\u003e\n    This started as a spread sheet somewhere back in the 80's. May have even been on dBase II on an Apple II running CPM at one point. From there it moved to a couple other databases and languages. In the early 90's it moved to PHP and mysql on a stand alone system. I did export the \"Quota List\" and put it in a back door on what was one of the first, if not the first Web Sites in Alabama. It was converted to RoR v1.0 and appeared on-line as GolfGaggle.com. That went through Rails 2, 3 and 4, before I replaced it with PtGolf in Rails 5, Zurb Foundation and all that stuff. It's actually scaled back a little - I tried to do too many things that groups were not interested in. \n  \u003c/dd\u003e\n\u003c/dl\u003e\n\nThat's enough history for now. I did learn a lot over the last 8 or so years, but not enough. Then I forget how I did something and have to go find it. That's the reason I'm going to attempt to document some of the techniques I used or created.\n\n\n\n\n\n  \n\n\n\n\n.md","created_at":"2017-02-20T02:10:00.000Z","updated_at":"2017-02-20T02:10:00.000Z"},{"id":22,"title":"Why I Really Wish Could Write","category":"thoughts","content":"\nSometimes you have an event that you really want to communicate, except you don't have that skill.\n\nYes I've been gone for quite a while and can't even remember how this blog works, but I'll try and hopefully to not go into too much bullshit to describe what happened.\n\nI've become involved with a local VFW post over the last few years. It's a long story, but you've always heard that you should not volunteer for anything. I did and let's just say I'm in charge of a lot more stuff than I wanted to be. In looking for help, I've tried to find someone younger to help with some tasks and I've failed - but I keep trying.\n\nI'll point out that I'm not a big VFW fan, it really is an inept bureaucracy that I deal with. I just joined so I could have a beer on Sunday if I wanted and comradely was something that was missing since I moved to Gadsden.  I was eligible because I spend a couple of years in Thailand during Vietnam and crossed a 'Combat zone' several times. That's nothing compared with someone who has actually been in a War zone!\n\nI stopped by the Post to check on things and JW was there. Nice young man that I've been trying to get us to help with the figuring out how to get the next generation of veterans involved. He stops by occasionally and I've seen him on the golf course occasionally.\n\nHe saw me can came down to talk. I had not talked to him about much, except helping with the next generation - knew he may have a some PTSD issues, but no details. I then became aware of why the VFW exists, or at least what we should be trying to do and feel woefully inept.\n\nThree tours in Iraq and one if Afghanistan. Combat artillery. They taught him how to climb into a machine respond to threats with deadly force. The smattering of details are coming fast and I'm trying to sort them out. An IDE injury that would eventually be declared the end of his usefulness. A marriage that would be ended because of War. A young child that he can't see because of the bad ending to the marriage. Put out to pasture, being taken care of but without self-respect. Nothing to do except exist.\n\nThe machine seemed like a computer game and he mastered it - almost sounded like \"American Snipper\" with artillery. How do you take that skill and use it when you've been put out to pasture? How do you fight the battle of being a part of you Son when the court looks at you as, well something other than a man that wants to be a father.\n\nI feel so lost in not knowing what to do.\n\nHe may be 70% medically retired, but I've seen him play scratch golf - something I've only managed a few times in my life on only 9 holes - not 18. We seem to be in concert with our views on politics and life. We agree that we need a General to start fixing our country, not the crew that claims they will fix things. We've destroyed the family with our economy (one of these days I write something on 'Who killed the Bread Winner?'). Our education system has been overtaken by yet another bureaucracy.\n\nWhat do I do?  The only thing I can think of at this time is some commercial on radio I've heard over the last few months that goes something like 'Have you ever stopped and talked to a veteran? Really talked?'\n\n\n\n\n\n\n.markdown","created_at":"2016-01-16T04:44:00.000Z","updated_at":"2016-01-16T04:44:00.000Z"},{"id":21,"title":"A new GolfGaggle Version","category":"rails","content":"\n\nGee, almost another 2 years have gone by!\n\nAnyhow I've been playing with a new version of GolfGaggle.com, my learning rails application for well over a year, trying to get the group I now play with move move off of their DOS command line application.  Still not sure they are going to use it, I may have too many bells and whistles.\n\nMy old site was in Rails 3.x and I've been doing most playing with rails 4.x.  Rather then upgrade, I started from scratch.  Tried different approaches, but it ends up being about the same structure, just a lot of cleanup and replacing my css with mainly Zurb Foundation. Therefore the new application is phone and pad friendly (responsive).\n\nI had it just about all done and put a development version on my MacMini server for the current group to test.  I at least got them to look and it, but nothing close to testing, so I decided to get it ready to deploy and put in production.  That's where I got overwhelmed. I vaguely remember how to deploy on a Mac server, but wanted to upgrade the OS and a few other things.  The last thing I did was on linux and while I didn't want to abandon the Mac, I decided to try and see how long it took me to put it on a VM cloud server. About three mornings!  I got an account with Digital Oceans a couple days ago and had the Debian environment up in a matter of hours with Postgresql, Unicorn, Nginx and rbenv.  They all worked, or at least installed, but then started to run into little problems.\n\nAfter I got rails installed, I tried a new rails application just to see if I could hit it. Postgres had a problem with locale. Debian installed with en_US and Postgres wanted UTF-8.  That took a few hours of searching and fixing.\n\nI then added Capistrano using my other linux project as an example.  That was surprising easy.  I was skipping between Digital Oceans tutorials and others, mixing things together.  Of course that had problems.  An example using rbenv would deploy, but not run. Spent another morning getting some stuff to work.  I could bring it up under webbrick, but not unicorn.\n\nThis morning I got it all working. All those mixed gists on the configuration files for unicorn.rb, unicorn.init and init.d had to be tweaked because of Capistrano. I know I had *almost* everything there, but couldn't get bundle exec to work. The final fix was found - I also had the same problem with another site and I kludge fixed it. I found a [better approach](http://stackoverflow.com/questions/23060209/rails-unicorn-init-script-not-executing-says-ruby-cant-be-found). In the init script I changed this:\n\n    CMD=\"cd $APP_ROOT; bundle exec unicorn -D -c $APP_ROOT/config/unicorn.rb -E production\"\n\nwith this:\n\n    CMD=\"cd $APP_ROOT; ~/.rbenv/bin/rbenv exec bundle exec unicorn -D -c $APP_ROOT/config/unicorn.rb -E production\"\n\n\nSomething about how rbenv and init.d work with executing as root, Whether rbenv in is .bachrc or .bashprofile.  This basically fixes it!\n\nAll seems to be working fine.  I even added this Octopress blog that I have not touched in a while without any problems.\n.markdown","created_at":"2015-06-13T17:08:00.000Z","updated_at":"2015-06-13T17:08:00.000Z"},{"id":19,"title":"Pan seared (blackened) salmon with asparagus cream sauce","category":"food","content":"\n\nI've not written much in this latest attempt at a blog, but I can't believe I don't have a food category. Guess I was trying to stay with thoughts (politics) or techie stuff, but I love to cook - sometimes.\n\nNow my kids, grandkids, and wife like for PopPop to cook. At least there are a few recipes that I usually don't try too much experimenting with and are requested. I'll start off with one of my, and Jan's favorites. Pan seared salmon with asparagus cream sauce. This is a simple dish if you can get fresh (or freshly frozen - not processed salmon) with skin. Prep, about an hour and cooking about 15 minutes.\n\n##### Salmon\n\nCut salmon into  serving size filets (2-3 inch pieces). Season with salt, pepper, and whatever (Cavender's and Tony Chachere's are my staple seasoning) and enough olive oil to coat. Set salmon aside and let it marinate until approaching room temperature (the hour prep).\n\n##### Asparagus Cream Sauce\n\nGet a cheap can of cut asparagus tips and stems or better. I've tried this with fresh asparagus, but not worth the effort to deal with the fiber. Canned asparagus works better!.\n\nWorking in a soup kitchen and eating processed food for most of my life, don't be freaked out, but:\n\n* Drain canned asparagus liquid into a small frying pan and set aside drained asparagus\n* Add about a tablespoon of butter to drained liquid and reduce until about a half\n  * Now someone at Libies, Del Montie, Green Giant or whatever brand you used added some seasoning and preservatives to the water for some reason. There is some flavor in the liquid and you are just getting rid of the water and preservatives.\n* Add about a cup of cream (heavy!) and start reducing until about a half\n* Add the asparagus and cook down until small bubbles in cream.\n* Put results into food processor and blend into a heavy cream sauce\n\n#### Sear (blacken) Salmon\n\nWhile cream sauce is reducing:\n\n* Add a little olive oil to hot pan and heat until almost smoking. I do 75% of searing in a cast iron pan.\n* Add salmon filets flesh side down! I like the skin crusty and find that skin side down first often leads to the skin sticking. Starting with flesh side seems to work better for me since the pan gets hotter and skin does not stick to pan when turned over. \n* Flash fry until slightly blackened. Reduce heat to medium and turn salmon over.\n* Fry until medium rare to medium (touch flesh and and still some bounce - not hard)\n\n#### Enjoy\n\nRemove from pan and add a little asparagus sauce over seared salmon.\n\nJust the seared salmon if fine, but the asparagus cream sauce seems to remove a lot of dislikes for salmon. My Mother say she hates salmon, but I've made this for her a number of times and while she still says she hates salmon, she cleans her plate. Maybe she is just being a mother, but I don't think so!\n\nUsually served with steamed rice and salad, rice pilaf if I have time.\n\nDon't over cook salmon. I'll eat it medium rare, but there should be some moisture left in the salmon or it is like canned tuna!\n\n\n\n\n\n\n\n\n.markdown","created_at":"2013-09-03T03:00:00.000Z","updated_at":"2013-09-03T03:00:00.000Z"},{"id":20,"title":"Why I don't...","category":"thoughts","content":"\n## ...do some stuff very often!\n\n### Write\n\nIt just takes too long! Maybe I don't have much to say, or just can't explain it very well.\n\n### Bake\n\nWhy all this measuring crap? I love to experiment with cooking - a little of this and a little of that. Some things turn out great, others not so great. Baking is an area where experimenting usually leads to disasters, I therefore avoid it. \n\nBut I like **Rhubarb Pie**. Grocery shopping in Gadsden sucks. Can't find weird stuff, so my semi-annual rhubarb pie has been every other year or so. Then I discovered that Dole has frozen rhubarb - showed up at the soup kitchen, probably from Walmart - didn't sell, so we got it.  Took a few packages home and made a Strawberry-Rhubarb pie with a no experimenting recipe - including store bought crust.\n\nNot the prettiest lattice, but I wasn't trying to sell it, just eat it!\n\nThen there is this kraut oven I bought that I absolutely hate. The recipe called for a preheated 450 degree oven for 10 minutes, then down to 350 for 30 minutes. The hated oven seemed to take forever to come up to temp, that's if I remember to hit the start button after I pick the function! It's as bad as having two buttons on a mouse - no feedback that you have to do anything other than pick a function. Then I discovered the function *fast convection* that will get the oven up to 400 in a couple of minutes. Hell I try that - works great with chicken wings!\n\nAfter it beeped at 450, threw in the pie and set the timer for 10 minutes. After about 5 minutes, I smelled something - my pie burning!\n\n![Burned Pie](/images/iwicw/IMG_0530.jpg)\n\nI guess *fast convection* turns on the broiler element and I had put the pie in the upper level of the oven. All was not lost. I do have a carbon deficiency - at least I like burned popcorn. Scraped off the really burned parts and it had just the right amount of carbon. Jan even said it was fine.\n\n\n### Gardening\n\nI've hated gardening since I was a kid and Grandmother would have me weed her gardens. Actually I don't hate gardening, just weeding - and I can grow a lot more weeds than stuff you can eat.\n\nTried tomatoes again, this time from seeds that I harvested from probably the only good tomato I ate last year. Had way too many plants and too lazy to repot. Just planted a bunch and threw the rest away (well I guess I just let them die in the potting pot). They took off great in the spring. Then came summer and the weeds. Did a couple rounds of weeding but basically concluded that this was too much work! Harvested a few tomatoes and they were good. Then the slugs decided they liked the tomatoes, so I just let the weeds take over and said I'll try it again in a few years.\n\nWhen I went home in June, I was talking to my Cousin Paul from San Diego. He married a hippie, sweet girl - artist - changed my cousin (probably saved him!).\n\n![Paul](/images/iwicw/paulandart.jpg)\n![Les and Paul](/images/iwicw/lesandpaul.jpg) Paul, Leslie and Junk art.\n\nHe is also a cooker and got into growing stuff. He told me about his horseradish patch and how simple it was. I remember grinding horseradish as a kid. Now they have food processors and I like horseradish on a few things (especially really pungent stuff like wasabi). Saw a big root at the store and brought it home and threw it in the fridge after I processed part of it, figuring I'd plant the rest of the root. About a month later I found the root at the bottom of the vegetable bin growing little green sprouts. Dug a couple holes in my weed garden and planted them.\n\nIn a couple days the spouts were tuning into leaves. In a week I had leaves. In another week I had **big** leaves. Hell, maybe it's something I can grow! Wondered if you could eat the greens. Chewed on one. Just like collard, mustard and other green stuff - tasteless unless you add bacon and hot pepper sauce.\n\nAbout a week later I go check on the horseradish and no leaves! Just stems and ribs! Something ate my leaves. Didn't see anything at first but then yesterday I found a bunch of caterpillars munching on the remaining stems. Googling pointed to cabbage caterpillars. They seemed to love it, maybe they are getting high on it since they now trying to eat the stems!. Maybe I should have dried the leaves and tried smoking them!\n\n![Horseradish1](/images/iwicw/IMG_0542.jpg) Horseradish ![Horseradish2](/images/iwicw/IMG_0543.jpg)\n\nAgain all is not lost. The roots don't care that much about the leaves, they'll pop out again when it decides it needs a little sun. We'll see next year. Of course I'm on my second year of asparagus. Think I had two stems in that time. \n\nWeeds and even a late tomato and some asparagus. There was even some chives and mint in there somewhere. Even some wine grapes turning into raisins.\n\n![one](/images/iwicw/IMG_0544.jpg)  ![two](/images/iwicw/IMG_0545.jpg) ![two](/images/iwicw/IMG_0546.jpg) ![two](/images/iwicw/IMG_0547.jpg)\n\nGardening is kind of like fishing, way too much time spend for so little reward. Coding and golf you get immediate results, but then I just waste time writing stuff that nobody wants and golf is not the same as it was with the Gaggle.\n\nThink I'll go eat worms, maybe caterpillars!\n\n","created_at":"2013-09-02T13:49:00.000Z","updated_at":"2022-09-12T18:35:48.889Z"},{"id":18,"title":"See Spot run","category":"rails","content":"\n\nPlaying around with my Take engine, which is probably going to be renamed to Assessable when I'm down.\nI've played around with evaluating or score text input, either by a contains match or a numeric match.\n\nDraft markdown overview.\n\n### Text Evaluation\n\nText entered in a text field or text area can be scored. The text_eval field in the answer record allows you to set\na formula to evaluate the answer that comes in from the assessment form. There are two methods of evaluation: Contains and Numeric.\n\n#### Numeric Evaluation\n\nNumeric evaluation allow you to see if the answer entered, converted to a number, matches the text_eval field, also converted\nto a number. This is primarily for use with floating point number. The formula optionally has a delta range value\nthat allow for decimal point precision.\n\nAn example question:\n\n* What is the value of Pi, rounded to 4 decimal places?\n  * text_eval set to \"3.1416\"\n  * Only an input of \"3.1416\" will evaluate to true.\n  \nThere are some potential problems using floating point number. Some number when converted from text will not be exact.{example?}. To \nguard against that, you can provide a delta value that will be added to and subtracted from the converted number and a range checked.\n\n* What is the value of Pi, rounded to 4 decimal places?\n  * text_eval set to \"3.1416::0.00001\"\n  * the input of \"3.1416\" will evaluate to true if after conversion it is in the range between 3.14159 to 3.14161.\n  * The :: (double colon) delimitates the match section from the deltas section\n\nYou can also provide an optional partial credit percentage, represented as a whole number percentage.\n\n* text_eval set to \"3.1416::0.00001%%100\" is equivalent to \"3.1416::0.00001\" since the default percentage is 100%\n* text_eval set to \"3.1416::0.00001%%80\" would give 80% credit if the match was not exact, but  between 3.14159 to 3.14161.\n  * The %% (double percent) delimits the delta value from the percentage\n\n\"3.1416\" happens to convert exactly in floating point. If you use Pi often, you probably have in memorized to a certain precession.\nPi is 3.141592 to six places. If that is what is entered because the user didn't RTFQ, they'd get 80% credit. \n\nYou can also have multiple deltas. Each delta is delimited by the same :: delimiter. The liberal evaluator could enter:\n\n* text_eval set to \"3.1416::0.00001%%80::0.0001%%40::0.001:20\"\n  * 100% if 3.1416 entered\n  * 80% if 3.14159 entered\n  * 40% if 3.14155 entered \n  * 20% if 3.1415 entered \n  \nLiberal evaluators are like our current teacher where close counts for everything, except in horseshoes!\n\nThere is a Text Eval helper in the Edit/Add Answers form that allows you to just enter the match, deltas and percentages and it will create the formula.\n\nIf you are evaluating integers or *exact* numbers, you can just use the Contains Evaluation.\n\n#### Contains Evaluation\n\nContains evaluation uses a formula, that is converted to Regular Expression to see if a text answer matches the rules defined the formula.\n\n* What is the noun in the sentence \"See Spot run.\"?\n  * text_eval set to \"spot\" (answers are converted to lowercase)\n  * Only the input of \"spot\" will evaluate to true.\n\nThe evaluation can contain multiple words that are AND'd or phrases. It can also contain multiple words that are OR'd together\n\n* What are the nouns in the sentence \"See Jane and Spot run.\"?\n  * text_eval set to \"spot jane\" \n  * Only the input of \"jane spot\" will evaluate to true.\n\n* What are the nouns in the sentence \"See Jane and Spot run.\"?\n  * text_eval set to \"spot\u0026jane\". The and operator \u0026 (ampersand) delimitates words that must be in the answer\n  * Only the inputs of \"jane spot\" or \"spot jane\" will evaluate to true.\n\n* What US President said \"Gorbachev, tear down this wall.\" in a famous speech?\n  * text_eval set to \"ronald\u0026reagan\" \n  * Only the input of \"ronald reagan\" or \"reagan ronald \" will evaluate to true.\n\nTo Or words, they must be contain in () and have an OR operator \\| (vertical bar) between the words\n\nAgain the liberal teacher.\n\n* What are the nouns in the sentence \"See Jane and Spot run.\"?\n  * text_eval set to \"(spot\\|jane)\" \n  * The inputs of \"jane spot\", \"spot jane\", \"jane\", \"spot\" will evaluate to true.\n  \nThey would say its close enough if they just enter one noun!\n\nMatches can also be negated using the NOT operator \"!\" (explanation point)\nThe good teacher (probably conservative) would know that students are sometime smarter than you think.\n\n* What are the nouns in the sentence \"See Jane and Spot run.\"?\n  * text_eval set to (\"spot\u0026jane)\u0026!see\u0026!and\u0026!run\" \n  * Any input containing \"see\" OR \"and\" OR \"\", \"run\" would NOT evaluate to true.\n  \nLike Numeric Evaluations, Contains Evaluation also provides a mechanism of giving partial credit. The :: eliminator  divide the formula into an Exact section and a Partial\nsection.  The Partial section contains a match element and an percent element. The partial match element is just like the exact match. It can contain, AND's, OR's and NOT's.\n\nAgain the liberal teacher decided they were being too liberal and decided to give only 50% credit if only one noun was entered.\n\n* What are the nouns in the sentence \"See Jane and Spot run.\"?\n  * text_eval set to (\"spot\u0026jane)::(spot\\|jane)%%50\" \n  * The inputs of \"jane spot\" would get 100%. The inputs of \"jane\" or \"spot\" would get 50% if an exact match was not found.\n  \nAgain being a little smarter than the students, you repeat the not conditions.\n\n* What are the nouns in the sentence \"See Jane and Spot run.\"?\n  * text_eval set to (\"spot\u0026jane)\u0026!see\u0026!and\u0026!run::(spot\\|jane)\u0026!see\u0026!and\u0026!run%%50\" \n  * Any input containing \"see\" OR \"and\" OR \"\", \"run\" would NOT evaluate to true.\n\nThe is also a Text Eval helper that will help build the Contains formula. The form helper (or typing) will also allow an optional || (double OR operator) that allows\nyou to OR groups of matches.\n\n* `text_eval set to \"spot||jane\" is the same as \"(spot|jane)\"`\n* text_eval set to \"'some group of matches\\|\\|another group of matches\" allows for complicated matches that probably don't exist.\n\n\n\n\n\n  \n\n\n\n\n.markdown","created_at":"2013-05-02T15:50:00.000Z","updated_at":"2013-05-02T15:50:00.000Z"},{"id":17,"title":"Returning Home","category":"thoughts","content":"\nEven though I've lived in a whole bunch of places since I left my home town at the early age of 17, I feel lucky that the house I grew up in is still there and I've returned to it practically every year since I left. Lately its been a couple times a year since my Mother is about to turn 90 and I need to help out my sister.\n\nIf I could write, I could write a book about living in a small coal mining town on the outskirts of Pittsburgh PA, but I can't. Although I can occasionally document a few memories.\n\nA lot has changed in the 50+ years since I left, but a lot is still the same. Some of the people are still there, such as my Mother, but most have moved on.\n\nMy thirteen year old granddaughter had a report due in which she has to interview someone who grew up in the depression (the 30's not Obama's!). She did that last night with my Mother and asked if there were any pictures of the kids in that era. It happens that a cousin has gathered a few. Thought I'd document a few.\n\nI've heard the stories from before my time (boomer, born in 1944), but picture bring it alive. Don't have any bread-line, starving pictures, just a few from the times. \n\nI grew up in what were called *company houses*, in a *patch* that was usually named after the name of the mine. The coal mines build houses for their employees to rent (reasonable) and provided other benefits that kept the worker working. Tennessee Ernie Ford immortalized the times in the song **Sixteen Tons**. *I owe my soul to the company store*, a line from the song talked about the store that all the miner had credit to purchase food and essentials. (rent and store credit deducted from pay!)\n\nMost of that was gone in my time. They were still called *company houses and stores*, but the mines sold them to the miners or banks.\n\nThis is the house I grew up pictured sometime in the 30's.\n\n![Home, 1930's](/assets/images/houseMid30s.jpg \"1105/07 Eisenhower Dr, Russellton PA\")\n\nThe houses were two bedroom duplexes, maybe 1200 sq ft on each side. Build in the early 1900's. Originally with no electricity, running water, and of course with a duplex outhouses! Coal was the fuel you used in your pot belly stoves and kitchen stoves. The mines put in electric and water later. There was still had an outhouse when I left in 1962.\n\nThis is the house in 2012. \n\n![Home, 1930's](/assets/images/house2012.JPG)\n\nNot much different outside, but a lot of upgrades. Some of the wiring is still 80 years old and presents some problems, but it is still the home I visit a couple times a year.\n\nAnd kid still play in the back yards, in the woods and boney dumps (waste coal) that are part of living in the area.\n\n![kids playing](/assets/images/marysonie.JPG)\n\n\n\n\n\n\n\n\n.markdown","created_at":"2013-04-02T00:05:00.000Z","updated_at":"2013-04-02T00:05:00.000Z"},{"id":16,"title":"When you retire, you should retire","category":"thoughts","content":"\nLike many who retire, you find out that you miss work. Not everything about it, but some things.\n\nIn my case, I loved coding. I was not great at it, but I've spent almost my entire working life trying to change things that controlled me work better. Sometimes I succeeded, sometimes I failed. I've been trying to use computers to make something better since the early 70's. I sometimes felt that I had visions on how to fix things, or at least make them better, that most people never thought about. Sometimes I **sold** those ideas, other times I had to give up. I've even had some stupid ideas!\n\nBack in December I was a little bored and decided to refresh my memory on coding. I've always used past projects to learn new stuff. Ruby on Rail (RoR), what was pushed on me as *our* solution of getting off of 4D was something I played with even before I retired. For the umpteenth time I rewrote my GolfGaggle.com site to take advantage of new releases. I then decided to try a few ideas I had about fixing the crap I wrote for AIDT. I call it crap, but it was just a *nudge* to get AIDT thinking about doing things differently. \n\nIt started with just a few simple things, but then turned into about a two month thought process that tried to improve, or at least present plans/options for improving what has been adopted. I cringe every time I think about the on-line application system I wrote as a **prototype**  still being used. I had drastically improved that shortly after I retired, in both 4D and RoR - but there was no real reason to change - don't fix what's not broken.\n\nIn my mind, (which is probably smaller than I think it is!) my prototype did some neat things. I tried to bridge the gap between different types of projects and other stuff AIDT has been doing that does not fit traditional projects. I solicited feedback and got a little, but it appears that plates are full and *don't fix what's not broken* is alive and well.\n\nSpring is coming and I have a dead RX7, grass to cut, and I may even go back to golf. I do miss golf and it has been almost 4 years since I've had the passion.\n\nThe demo is still out there, but it is time to give up on my latest *nudge* attempts.\n\nSteve\n\n\n\n\n\n\n.markdown","created_at":"2013-03-27T23:14:00.000Z","updated_at":"2013-03-27T23:14:00.000Z"},{"id":15,"title":"The RX7 Died","category":"other","content":"\nThis is old news, but all hope is not lost - there is a chance for resurrection.\n\nAfter getting it working in June, I had several problems I had to fix that I just touched on in the *alive* post.\n\n- Several computers had corrosion, bad solder joint problems.\n  - The body CPU ended up what gave me problems years ago. It came down to the anti-theft system indicated a break-in and it would not\n  start. Took a little while but I bypassed the circuit and stepped around it.\n- The power steering CPU indicated problems, but it stopped after a few days.\n- The rear brake calipers were shot, replaced them.\n- The clutch hydraulic system had problems. Replaced the master cylinder.\n- I had the body CPU bad solder joints repaired by a TV repairman (who else knows how to solder anymore?)\n  - That fixed a few thing, but not the theft cutout. Bought a new CPU an fixed all the minor problems.\n  \nAfter those problems were fixed, I got a new set of tires and started driving it a couple times a week with no problem. It still had the getup and go I remembered. I was ready to get a new top and have it painted and enjoy it while I could. With the problems and the age, let alone insurance costs, it was not a good choice for my grandson.\n\nJames, my son, came down for a visit and we took it for a spin - time to show it off. About a mile down the road the power steering computer started giving off warning beeps. We went a few miles down the road then came back, still beeping. Said I have to look up the problem later. Parked it for a few days and was going to take it some where, but the beeps started as soon as I put the key in. About a week later I tried it again and no beeps - but it would not start. Cranked and cranked, but would not start.\n\nSpent about a week trying to figure out what could have gone wrong, bad engine CPU, relay etc. Changed plugs, no joy. Somewhere in the trouble shooting chart it said to check compression. \n\n### Bang\n\nI had zero compression in the front rotor. Checked, double checked. It went from working fine to nothing. It appears that I lost an apex seal on the front rotor, and the rear rotor compression reading was not that good of a reading.  The apex seal is about the same as a piston ring on a piston car. This was not quick or easy fix. This happened sometime in September.\n\nI did some research and I probably would have to have engine overhauled. About $1500 by myself or $2500 to send it off. With winter approachingvand no room in the garage, I decided to wait until spring.\n\nSpring is getting close, so after Jesus arises this Sunday for the 2000+ time, and I get back from PA, I'll see if I can remove the engine.\n\nIt was a sad day when it happened.\n  \n.markdown","created_at":"2013-03-26T21:16:00.000Z","updated_at":"2013-03-26T21:16:00.000Z"},{"id":14,"title":"Octopressing","category":"code","content":"\nAs hard as I try, I still have a hard time writing things down, in correct English.\n\nI started I Wish I Could Write almost three years ago using Jekyll. A ruby program that takes your configuration and source (markdown, textile, html)\nand creates a static site.\n\nI did okay for a while, at the start, but then I lost interest - who's going to read it anyhow, except me.\n\nI found a new tool Octopress, which sits on top of Jeykll and makes it easier to manage and deploy the site. I wanted to write a\nnew blog for the soup kitchen I volunteer at a couple days a week. I put that up in a couple days (mainly writing recipes). I got\na new domain *stevealex.us* and stuck the soup kitchen there [http://soup.stevealex.us](http://soup.stevealex.us), at least for a while.\n\nI also threw up the another blog that I though I'd replace I Wish I Could Write with, at least for technical stuff. After getting it up - I changed may mind! I customized the Octopress configuration a little and got close to the theme I had used, with a little less blackness.\n\nOctopress also uses compass for css (scss) and it is kickass powerful, not sure I'll ever understand it, but you don't have to. There are a few places where you can put in custom styles and overwrite some of the major areas - really all you need.\n\nI'm going to deploy this one day after I started. That includes coping over most of the old posts and converting a few from ultraviolet to pygmnts.\n\nNow I just have to see if I feel like writing about anything.\n\n\n.markdown","created_at":"2013-03-23T12:41:00.000Z","updated_at":"2013-03-23T12:41:00.000Z"},{"id":13,"title":"Rails 3 deploy with nginx unicorn on OSX","category":"rails","content":"\nA few weeks ago I bought a new MacMini to replace my PPC MacMini that was pulled out of service\na few years ago. It had a few rails and jekyll applications that I ended up moving to my wife's iMac.\nMost were just copied and running in developer mode. I had an AppleScript to control\nstart, stop, restart. All worked fine, but not the right way of doing things. I'll point out that \nthe rails applications are small and are either demo sites for clients or something with a limited audience.\n\nI decided to make another attempt at Capistrano and do it right - at least my version of right. I used as\nmy guide a series of new and revised Railscasts that covered Capistrano and deployment \n([Deploying to a VPS](http://railscasts.com/episodes/335-deploying-to-a-vps),\n[Capistrano Task](http://railscasts.com/episodes/133-capistrano-tasks-revised),\n[Capistrano Recipes](http://railscasts.com/episodes/337-capistrano-recipes))\nMy problem was that it was all based on L-unix (sorry, my code word or Linux).\n\nThe next few weeks was spend getting these apps ready for deployment, learning more than I wanted about launchd, bash scripting, Mountain Lion,\nMountain Lion Server, and a bunch of gems. I went around in circles for a while since I first had to move the apps in pretty much\ntheir current state to the server and run under unicorn instead of thin. This while trying to get the cap deployment to work and \nnot step on each other. In the end, the results are not much different than the L-unix version. I did run into a few major \nstumbling blocks.\n\n- rvm does not like Mountain Lion\n- launchctl does not like launching rvm gems\n- launchctl does not know about your shell $PATH\n- it is hard to launch something on startup without launchctl\n- don't use launchclt for service with a daemon, it will fill up your logs!\n\nAfter wasting a bunch of time trying to get the Mountain Lion MacMini and my Snow Leapord laptop to behave the same, \nI gave up on rvm on the server and installed ruby 2.0.0 using Homebrew. What I ended up with can be summarized as follows:\n\n- Nginx is started from /Library/LaunchDaemons\n- A user is set up control everything else ('developer' in my case) with automatic login on startup\n  - Could use LaunchDaemons but more sudo that I wanted to fool with at the time\n- All applications and static sites are in ~/apps\n- A local git repository was set up in ~/repo for stuff not on github\n- The router (1st generation AirPort in my case) port forwards all port 80 traffic to the MacMini\n  - Nginx config does routing to the applications and sites.\n  \n### Nginx\n\nThe nginx installation just following the brew install nginx info. A plist was added to /Library/LaunchDaemons.\n\n```xml\n\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003c!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"\u003e\n\u003cplist version=\"1.0\"\u003e\n\u003cdict\u003e\n\t\u003ckey\u003eLabel\u003c/key\u003e\n\t\u003cstring\u003ehomebrew.mxcl.nginx\u003c/string\u003e\n\t\u003ckey\u003eRunAtLoad\u003c/key\u003e\n\t\u003ctrue/\u003e\n\t\u003ckey\u003eKeepAlive\u003c/key\u003e\n\t\u003cfalse/\u003e\n\t\u003ckey\u003eProgramArguments\u003c/key\u003e\n\t\u003carray\u003e\n\t\t\u003cstring\u003e/usr/local/opt/nginx/sbin/nginx\u003c/string\u003e\n\t\t\u003cstring\u003e-g\u003c/string\u003e\n\t\t\u003cstring\u003edaemon off;\u003c/string\u003e\n\t\u003c/array\u003e\n\t\u003ckey\u003eWorkingDirectory\u003c/key\u003e\n\t\u003cstring\u003e/usr/local\u003c/string\u003e\n\u003c/dict\u003e\n\u003c/plist\u003e\n```\n\nControl on nginx is just sending signal to nginx, e.g., `sudo nginx -s reload`\n\n### Unicorn\n\nUnicorn is launched on startup by a launch agent in ~/Library/LaunchAgents. The plist is symbolically linked to the unicorn.rb configuration file in the apps shared directory. The plist must contain a path that includes a path to the unicorn gem/wrapper plus whatever launchctl needs (/etc/paths).\n\n```xml\n\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003c!DOCTYPE plist PUBLIC \"-//Apple Computer//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"\u003e\n\u003cplist version=\"1.0\"\u003e\n\u003cdict\u003e\n\t\u003ckey\u003eEnvironmentVariables\u003c/key\u003e\n\t\u003cdict\u003e\n\t\t\u003ckey\u003ePATH\u003c/key\u003e\n\t\t\u003cstring\u003e/usr/local/opt/ruby/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin\u003c/string\u003e\n\t\u003c/dict\u003e\n\t\u003ckey\u003eLabel\u003c/key\u003e\n\t\u003cstring\u003eapps.ngg.unicorn\u003c/string\u003e\n\t\u003ckey\u003eKeepAlive\u003c/key\u003e\n\t\u003ctrue/\u003e\n\t\u003ckey\u003eProgramArguments\u003c/key\u003e\n\t\u003carray\u003e\n        \u003cstring\u003e/usr/local/opt/ruby/bin/unicorn\u003c/string\u003e\n        \u003cstring\u003e-c\u003c/string\u003e\n        \u003cstring\u003e/Users/developer/apps/ngg/shared/config/unicorn.rb\u003c/string\u003e\n        \u003cstring\u003e-E\u003c/string\u003e\n        \u003cstring\u003eproduction\u003c/string\u003e\n\t\u003c/array\u003e\n\t\u003ckey\u003eRunAtLoad\u003c/key\u003e\n\t\u003ctrue/\u003e\n\u003c/dict\u003e\n\u003c/plist\u003e\n```\n\nThe unicorn server(s) are controlled by a modified version of Ryan's version of githubs unicorn_init.sh. Since I have\nmultiple applications, I added an \"application\" command to the arguments. There are some minor conversions for L-unix to OSX commands and using launchctl instead of service to start, stop and reload the server.\n\n```sh\n#!/bin/sh\n\n# Modified version of githubs unicorn_init.sh script to control multiple unicorn processes.\n# PLIST added for launchctl (and LABEL if you want to use the lunchy gem)\n# usage: unicorn_control.sh \u003capplication\u003e command\n\nset -e\n\n# Feel free to change any of the following variables for your app:\nTIMEOUT=${TIMEOUT-60}\nAPP_ROOT=\"/Users/developer/apps/$1\"\nPID=$APP_ROOT/shared/pids/unicorn.pid\nPLIST=\"/Users/developer/Library/LaunchAgents/apps.$1.unicorn.plist\"\nLABEL=\"apps.$1.unicorn\"\nAS_USER=developer\n\nset -u\n\nOLD_PIN=\"$PID.oldbin\"\n\nsig () {\n  test -s \"$PID\" \u0026\u0026 kill -$1 `cat $PID`\n}\n\noldsig () {\n  test -s $OLD_PIN \u0026\u0026 kill -$1 `cat $OLD_PIN`\n}\n\nrun () {\n  if [ \"$(id -un)\" = \"$AS_USER\" ]; then\n   eval $1\n  else\n    su $AS_USER -c \"$1\"  \n  fi\n  \n}\n\ncase \"$2\" in\nstart)\n  sig 0 \u0026\u0026 echo \u003e\u00262 \"Already running\" \u0026\u0026 exit 0\n  launchctl load $PLIST\n  ;;\nstop)\n  run \"launchctl unload $PLIST\" \u0026\u0026 exit 0\n  echo \u003e\u00262 \"Not running\"\n  ;;\nforce-stop)\n  run \"launchctl unload $PLIST\" \u0026\u0026 exit 0\n  echo \u003e\u00262 \"Not running\"\n  ;;\nrestart|reload)\n  sig HUP \u0026\u0026 echo reloaded OK \u0026\u0026 exit 0\n  echo \u003e\u00262 \"Couldn't reload, starting '$PLIST' instead\"\n  run \"launchctl load $PLIST\"\n  ;;\ndump)\n  echo $APP_ROOT\n  echo $PID\n  echo `cat $PID`\n  echo $PLIST\n  echo $LABEL\n  echo $TIMEOUT\n  echo $AS_USER\n  echo $OLD_PIN\n  echo `cat $OLD_PIN`\n  echo \"Control Command: $1 $2\"\n  exit 0\n  ;;\nupgrade)\n  if sig USR2 \u0026\u0026 sleep 2 \u0026\u0026 sig 0 \u0026\u0026 oldsig QUIT\n  then\n    n=$TIMEOUT\n    while test -s $OLD_PIN \u0026\u0026 test $n -ge 0\n    do\n      printf '.' \u0026\u0026 sleep 1 \u0026\u0026 n=$(( $n - 1 ))\n    done\n    echo\n\n    if test $n -lt 0 \u0026\u0026 test -s $OLD_PIN\n    then\n      echo \u003e\u00262 \"$OLD_PIN still exists after $TIMEOUT seconds\"\n      exit 1\n    fi\n    exit 0\n  fi\n  echo \u003e\u00262 \"Couldn't upgrade, starting '$PLIST' instead\"\n  run \"launchctl load $PLIST\"\n  ;;\nreopen-logs)\n  sig USR1\n  ;;\n*)\n  echo \u003e\u00262 \"Usage: $0 \u003cstart|stop|restart|upgrade|force-stop|reopen-logs\u003e\"\n  exit 1\n  ;;\nesac\n\n```\n\n### Capistrano\n\nI'm not going to put all my Capistrano recipes here. When I figure out Octopress, I may add them as a download. Since this is not a bare startup server, I commented out most of install tasks. Don't want to install Postgres over running applications!\nOther than that, there are just a few modifications. e.g., My demo sites run as a subdomain to my blog, so I \nadded server_name to the deploy.rb cap script for nginx.\n\n```ruby\nrequire \"bundler/capistrano\"\n\nload \"config/recipes/base\"\nload \"config/recipes/nginx\"\nload \"config/recipes/unicorn\"\nload \"config/recipes/postgresql\"\nload \"config/recipes/check\"\n\nserver \"stevealex.us\", :web, :app, :db, primary: true\n\nset :user, \"developer\"\nset :application, \"ngg\"\nset :deploy_to, \"/Users/#{user}/apps/#{application}\"\nset :deploy_via, :remote_cache\nset :launch_agents, \"/Users/#{user}/Library/LaunchAgents\"\nset :use_sudo, false\nset :server_name,\"golfgaggle.com *.golfgaggle.com\"\nset :scm, \"git\"\nset :repository, \"git@github.com:/salex/ngg.git\"\nset :branch, \"master\"\n\ndefault_run_options[:pty] = true\nssh_options[:forward_agent] = true\n\nafter \"deploy\", \"deploy:cleanup\" # keep only the last 5 releases\n```\n\nThe unicorn.plist was added to the templates to generate the plist that is linked to in LaunchAgents. My unicorn_control.sh is used to control unicorn.\n\n```ruby\nset_default(:unicorn_user) { user }\nset_default(:unicorn_pid) { \"#{current_path}/tmp/pids/unicorn.pid\" }\nset_default(:unicorn_config) { \"#{shared_path}/config/unicorn.rb\" }\nset_default(:unicorn_log) { \"#{shared_path}/log/unicorn.log\" }\nset_default(:plist) { \"#{shared_path}/config/unicorn.plist\" }\nset_default(:unicorn_workers, 2)\n\nnamespace :unicorn do\n  desc \"Setup Unicorn initializer and app configuration\"\n  task :setup, roles: :app do\n    run \"mkdir -p #{shared_path}/config\"\n    template \"unicorn.plist.erb\", plist\n    template \"unicorn.rb.erb\", unicorn_config\n    # unicorn_control and launchctl take care of the below commented out lines\n    # template \"unicorn_init.erb\", \"/tmp/unicorn_init\"\n    # run \"chmod +x /tmp/unicorn_init\"\n    # run \"#{sudo} mv /tmp/unicorn_init /etc/init.d/unicorn_#{application}\"\n    # run \"#{sudo} update-rc.d -f unicorn_#{application} defaults\"\n  end\n  after \"deploy:setup\", \"unicorn:setup\"\n\n  %w[start stop restart upgrade].each do |command|\n    desc \"#{command} unicorn\"\n    task command, roles: :app do\n      run \"/users/developer/apps/unicorn_control.sh #{application} #{command}\"\n    end\n    after \"deploy:#{command}\", \"unicorn:#{command}\"\n  end\nend\n```\n  \nThis is the first draft of this process and I have to learn a little more about Octopress before I allow comments, make it smaller, etc. Then there is always Yinglish problems, or my version of English - brain says this, fingers type that.\n\n.markdown","created_at":"2013-03-19T10:53:00.000Z","updated_at":"2013-03-19T10:53:00.000Z"},{"id":12,"title":"Politics and Lying","category":"thoughts","content":"\n\nOne of my former co-worker forwarded me something I wrote back in 2003. I can't remember the exact situation, but it was over a special election in Alabama to amend the constitution, allowing some new means of generating revenue. I am not sure if I was for or against it, but we were barraged for weeks with ads that had outrageous lies.\n\nYou can replace \"September 9th\" in the following text with \"Yesterday\" and it would still fit!\n\n#### I'm tired of having liars in control.\n\nI don't know how we got to this point, or if it has always been like this and I'm just starting to observe it, but it is getting out of hand. Must we lie to climb each rung on the ladder to success?\n\nFor those of you who don't know me well, I'm not a very religious person - but if I go back to my upbringing, lying is a mortal sin and you go to hell for lying. Now we just threw out the Ten Commandments, but somehow, \"Thou shalt not bear false witness against thy neighbor\"  (or \"Thou shall not  lie\"  for short) turned into something called perjury. That means you can go to jail for lying - but only if you are on a lower rung then the accuser. It appears to me that those above me - in control over some aspect of my life - don't go to hell for lying, but they do create hell for me.\n\nSeptember 9th was just the latest example of blatant lying to try to achieve an objective - and the lying was on both sides! Now maybe they consider that telling \"half-truths\" is not really lying, it's just a way of turning a false into a true, or a true into a false. I could cite some of the half-truths that have been told, but I think we're all tired of hearing them and that phase is now over. \"Who do you want to believe - us or them?\" seems to be the new motto for success. It implies that someone is lying and assumes that we're too stupid to figure out the truth.  That we will go with the loudest drummer, best or most inspirational speaker, or those who have influence over us (usually special interest groups who came into control by lying to us!).\n\nIs \"Our foreign policy has been a miserable failure\" a lie? A half-truth? I guess it depends on your definition of \"miserable\" - or from a famous case of the 90's, \"It depends on what the definition of 'is' is\". There seems to be no penalty for this political half-speak. I feel like we have used car salesmen running our country and I'm being sold a lemon, or am told that what seems perfectly good to me is a lemon and I'm just too stupid not to know that it is a lemon.\n\nI'm tired of liars, of the policy of personal destruction, of activist jurists redefining truth. We've had the solution since our founding - it's called the vote - but lying and the herd mentality has weakened its effectiveness. We need to throw the liars out, but that will take some time and study on our part. We should not climb the ladder of success by lying, but by thinking, listening, learning -  and then doing the right thing.\n\nSteve Alex\n","created_at":"2012-09-22T12:41:00.000Z","updated_at":"2022-05-14T12:20:35.039Z"},{"id":11,"title":"2012-09-15-in-the-begining","category":"moneypit","content":"\nh3. In the Beginning\n\nWhen I make up my mind in 2008 to retire on January 1st, 2009, Jan and I did our semi-annual look for a retirement home somewhere on the water. We were not totally committed to a move, just looking. Somehow we got a little more serious. We found a couple of places, but didn't like the often 10+ mile trip to the nearest store. We looked in Sylacauga, Pell City and nothing fit. We moved north to Southside and actually put in an offer, which I am glad was not accepted.  The agent kept finding places and then one popped up in North Gadsden, on a slew off of the Cossa river.\n\nI guess it had a better fit because we visited the place several times. It was owned by a Georgia real estate agent who was trying to flip it. It was vacant and he'd rent it to fisherman or just use it as a weekend home. I knew it had a lot of work to be done on it but still made what was probably an irrational decision.\n\n\nCan't believe it has been over three years since I started this project. Over the next few posts, I'll try to highlight some of the stuff that was done over those two years.\n\nI'll use my list from the original post as a guide. My estimates were fairly good, but every thing is not done. Down to roof and ducting.\n* New roof = $7,000\n* New kitchen = $7,000\n* New window = $7,000\n* New floor = $7,000\n* New heat pump = $7,000\n* New ducting = $2,000 (there are exceptions!)\n* New carpet = $3,000\n\n\nSome pictures from a Sept 2008 visit.\n\nLiving room\n \n\u003cimg src=\"/images/iwicw/moneypit/beginning1.jpg\" width=\"640\" height=\"480\" alt=\"Moneypit Start1\"\u003e\n\nWarped door into family room\n \n\u003cimg src=\"/images/iwicw/moneypit/beginning2.jpg\" width=\"640\" height=\"480\" alt=\"Moneypit Start1\"\u003e\n\nThe windows - this on infested with lady bugs!\n \n\u003cimg src=\"/assets/images/moneypit/beginning3.jpg\" width=\"640\" height=\"480\" alt=\"Moneypit Start1\"\u003e\n\nStorage shed\n \n\u003cimg src=\"/assets/images/moneypit/beginning4.jpg\" width=\"640\" height=\"480\" alt=\"Moneypit Start1\"\u003e\n\nBack view from doc\n \n\u003cimg src=\"/assets/images/moneypit/beginning5.jpg\" width=\"640\" height=\"480\" alt=\"Moneypit Start1\"\u003e\n\nI'll even post my $200 aerial picture!\n\n\u003cimg src=\"/assets/images/Etowah_Alex.jpg\" alt=\"\" width=\"700\" /\u003e\n\n\n\n \n\n\n\n.textile","created_at":"2012-09-15T14:53:00.000Z","updated_at":"2022-06-04T17:10:56.180Z"},{"id":10,"title":"2012-09-11-where-did-the-money-go","category":"moneypit","content":"\nh3. It's only money!\n\n\u003cimg src=\"/images/iwicw/shapeimage_6.jpg\" alt=\"\" /\u003e\n\nCan't believe it has been over two years since I started this project. Over the next few posts, I'll try to highlight some of the stuff that was done over those two years.\n\nI'll use my list from the original post as a guide. My estimates were fairly good, but every thing is not done. Down to roof and ducting.\n\n* New roof = $7,000\n* New kitchen = $7,000\n* New window = $7,000\n* New floor = $7,000\n* New heat pump = $7,000\n* New ducting = $2,000 (there are exceptions!)\n* New carpet = $3,000\n\nI'll even post my $200 aerial picture!\n\n\u003cimg src=\"/images/iwicw/Etowah_Alex.jpg\" alt=\"\" width=\"700\" /\u003e\n\n\n\n \n\n\n\n.textile","created_at":"2012-09-11T14:53:00.000Z","updated_at":"2022-06-04T17:05:04.395Z"},{"id":9,"title":"RX7 Is Alive","category":"other","content":"####  It only took me about 12 years!\n\nBack in 1991/92 I was going through my mid-life crisis - approaching 50. I decided that I needed a red convertible to ease the crisis. I spend most of my youth car poor - bought too many cars too fast and was always in debt. By 1992 I had grown up and was keeping cars for more than 4 years (and paying them off). My poor 1986 Tunderbird Turbo coupe was riddled with hail damage and it was time for a change. I decided on a car I'd been looking at for years, a red 1991 RX7 Vert.\n\nThis is just an intro so here is a brief history.\n\n* Drove RX7 as primary car for about 9 years.\n* The roof was leaking\n* I was working my ass off and didn't have time to fix stuff\n* Approaching 60 it was getting harder to \"crawl\" in and out of the RX7\n\nDecided I needed a change, but would keep the car for my grandson, who was only about 4 at the time.\n\nI parked the car and drove it occasionally, but the battery would go dead, the roof was still a problem, etc. Then 6 years went by with it parked on the side of the house with a cover on it. I spend a little cash and got it running, but there were problems and I still didn't have time to deal with them - covered and parked it again. Then another 6 years went by and the car was getting worse - I couldn't get it to start. I towed it to the money pit when we moved. Tried to work on it last year I but seemed to be over my head. I knew I needed a new gas tank and on June 9th, 2012 it arrived and I started working on it. Took a couple days to get it running. Took about a month to fix some of the problems.\n\nThis is just a couple pictures and I'll go back in history and describe the RX7 restoration project later.\n\nThe back: \n![](/images/iwicw/rx7-1.jpg)\n\nThe side:\n![](/images/iwicw/rx7-2.jpg)\n\nThe front:\n![](/images/iwicw/rx7-3.jpg)\n\nThe day it came alive video (Jun 9, 2012):\n\u003cvideo width=\"600\" controls\u003e\n  \u003csource src=\"/images/iwicw/rx7.mp4\" type=\"video/mp4\"\u003e\n\u003c/video\u003e\n\nHad to do something since I am no longer coding and the kitchen (and most money pit projects) are complete.\n\n","created_at":"2012-08-20T12:41:00.000Z","updated_at":"2022-05-12T13:49:20.379Z"},{"id":7,"title":"Open Source Assessments","category":"rails","content":"\n### I think I am going to open source my Assessments work as a plugin\n\nI guess it has been almost three years since I came up with my first version of assessments for Active4D using XML. I guess it was for the ThyssenKrupp project. They wanted to do on-line applications and career builder sucked - so I rolled my own.\n\nAfter I retired I wrote a version that used three tables - Assessments, Questions, and Answers. I think I first wrote it in Rails, then in Active4d.  I made a lot of enhancements to the Active4D version and then moved them back to Rails. I then upgraded the Rails version to work in Rails 3. I think it is time to clean it up and see anyone else needs such an animal.\n\n## What are assessments?\n\nI wrote assessments to take care on on-line applications for AIDT. On-line applications had 6 sections.\n\n* Contact Information\n* General Questions ( Are you willing to work overtime, weekends, etc)\n* Education Questions - gather all education and training\n* Work skills Questions - How many years of experience do you have welding.\n* Work History Questions - Information on last three jobs.\n* Custom Questions. Questions that looked more closely at skills and history.\n\nOn the original (and still used) XML version, everything except Contact and work history were scored as Assessments. The XML basically defined the questions and answers table attributes and values in XML.\n\nThe current version can do all 6 sections, although contact information is better gathered through a registration module. After thinking about what I came up with, I worked at trying to make it as generic as possible. It can be used for surveys, tests and probably a number of other things.\n\n### How it works\n\n``` ruby\nclass Assessment \u003c ActiveRecord::Base\n  has_many :questions, :order =\u003e \"sequence\", :dependent =\u003e :destroy\n  ...\nend\n\nclass Question \u003c ActiveRecord::Base\n  belongs_to :assessment\n  has_many :answers, :order =\u003e \"sequence\", :dependent =\u003e :destroy\n    ...\nend\n\nclass Answer \u003c ActiveRecord::Base\n  belongs_to :question\n    ...\nend\n\n```\n\nAssessments are basically just information about the assessment and the parent of the questions. Being a plugin, assessments must be tied to something, an applications, survey, evaluation. There are fields in the table that allow that connection to be made it different ways. \n\n``` ruby\ncreate_table \"assessments\", :force =\u003e true do |t|\n  t.integer  \"master_id\"\n  t.integer  \"assessible_id\"\n  t.string   \"assessible_type\", :limit =\u003e 20\n  t.string   \"name\"\n  t.text     \"description\"\n  t.string   \"status\"\n  t.string   \"category\"\n  t.string   \"answer_type\",     :limit =\u003e 20\n  t.string   \"display_type\",    :limit =\u003e 20\n  t.float    \"max_raw\"\n  t.float    \"max_weighted\"\n  t.datetime \"created_at\"\n  t.datetime \"updated_at\"\nend\n```\n\nThey can be tied to any other model through a Polymorphic association \"assessible\". They can also be tied to another model using the assessment id.  In the case of online applications, there was a many to many table setup between the job application stage and the assessments.\n\nMost of the information is optional. The assessment record is mainly there to get the questions on the assessments and the possible answers to those question. There are two important actions in the Assessments controller that are the heart of the plugin. Display and Post.  Display generates the web form to take the assessments. Display is actually optional, you can always roll your own layout - you just must conform to the naming convention for input elements. Post then scores the submitted assessment and returns a scored assessment object (hash) that the user can do what then want with (store just the score, serialize the hash and store it, etc). I'll delay talking about what some fields do/mean until we discuss questions and answers.\n\n### Questions and Answers\n\n``` ruby\ncreate_table \"questions\", :force =\u003e true do |t|\n  t.integer  \"master_id\" \n  t.integer  \"assessment_id\"\n  t.integer  \"sequence\"\n  t.string   \"question\"\n  t.string   \"shortname\",     :limit =\u003e 20\n  t.string   \"answer_type\",   :limit =\u003e 20\n  t.string   \"display_type\",  :limit =\u003e 20\n  t.string   \"score_method\",  :limit =\u003e 20\n  t.float    \"weight\"\n  t.boolean  \"critical\"\n  t.float    \"minimum_value\"\n  t.text     \"note\"\n  t.datetime \"created_at\"\n  t.datetime \"updated_at\"\nend\n\ncreate_table \"answers\", :force =\u003e true do |t|\n  t.integer  \"master_id\"\n  t.integer  \"question_id\"\n  t.integer  \"sequence\"\n  t.string   \"answer\"\n  t.string   \"shortname\",        :limit =\u003e 20\n  t.float    \"value\"\n  t.boolean  \"requires_other\"\n  t.string   \"other_question\"\n  t.string   \"answer_eval\"\n  t.float    \"eval_false_value\"\n  t.datetime \"created_at\"\n  t.datetime \"updated_at\"\nend\n\n```\n\n* master_id is an optional feature. For the online application use, assessments are usually \"cloned\" from a \"Master\" assessment. Different companies might want to score questions differently. The easiest way to do this is just to make a copy of the assessment and modify the scoring. The master id can be considered a parent id and allows you to get all cloned assessments, questions or answers for that parent. This would allow you to see how applicants answered certain questions across all companies.\n* sequence is used to sort questions and answers for the display action \n* answer_type controls what input elements are used - basically radio, checkbox, select, text and textarea.\n\u003e+ radio - radio buttons are used for answers (multiple choice)\n\u003e+ checkbox - checkboxes are used for answers to all \"Check all that apply\"\n\u003e+ select - basically the same as a radio button, just using a select-options pulldown\n\u003e+ select-multiple - basically the same as a checkbox\n\u003e+ text - a single text field answer. This answer can optionally be scored using a regex scheme\n\u003e+ text_numeric - A scored text field that contains a numeric answer.\n\u003e+ textarea - Displays a textarea instead of a textfield to gather answers for composition type questions.\n\u003e+ textform - allows multiple text answers for one question (e.g, address, city, state, zip, etc)\n* display_type is used by the display action to generate radio buttons or checkboxes. \n\u003e+ Inline - take less space for the \"rate something on a 1 to 5 scale\" type questions. Buttons and answers are painted horizontally.\n\u003e+ List (default) - Buttons and answers are painted vertically\n* score_method defines how certain answer types are scored.\n\u003e+ value (default or blank). The value of the the answer is used\n\u003e+ sum - used only for checkboxes or multiple-select to generate a score based on the sum of the selected values.\n\u003e+ max - the default method for checkboxes and multiple-selects where the score is based on the highest answer value checked.\n\u003e+ none - used to just gather answers but not score them.\n* requires_other - Each answer (radio, checkbox only) can generate a text box to gather additional information. For instance selecting a \"Completed high school with a diploma\" answer could bring up an addition question to enter the name and location of the school.\n* answer_eval is used to score text answers and uses a regex scheme to score the text field.\n* shortname - questions and answers have optional shortnames. While the answer.answer and question.question are used in the display action. A summary dump of the scored objects can be hard to read with all those long questions. In the summary dump, the short name will be used if it is not blank.\n* critical - A question can be considered critical if the answer fails to meet a minimum value on a question. In that case you failed the assessment - even if you score was high. This is used to screen out people if they do not conform to a job requirement (e.g., willing to work rotating shifts)\n* weight - the raw answer values can we weighted, meaning that some questions are more important than others. This is also optional and there are other ways of achieving the same outcome. (answer values are floats)\n\nAll three tables are have CRUD controllers using nested routes. Only Assessment has none-CRUD actions: Post, Display and Clone.\n\n### A short example\n\nI have a test assessment that displays most of the options. The question list follows:\n\n\u003cimg src=\"/assets/images/sillyassessment.png\" alt=\"\" /\u003e\n\nWhile you don't see how the answers are set up, you can pretty much tell from the display page - filled in:\n\n\u003cimg src=\"/assets/images/display.png\" alt=\"\" /\u003e\n\nAnd the post dump.\n\n\u003cimg src=\"/assets/images/dump.png\" alt=\"\" /\u003e\n\nI only scored 19 points out a possible 42. I also failed the assessment because I answered \"golf\" as a hobby. This employer had the opinion that anyone who hunts, fishes, or golfs would not be a good employee. The answer eval field was set to \u003ccode\u003e!=1:(golf|fish|hunt)\u003c/code\u003e which is parsed and breaks down to that they will get 1 point if the answer does not contain golf, fish or hunt!\n\nThe post.inspect is the scored object. Again, use out of it what you need.\n\n\n\n.markdown","created_at":"2010-08-22T12:41:00.000Z","updated_at":"2010-08-22T12:41:00.000Z"},{"id":8,"title":"AFOLD and DAD/DUEL","category":"code","content":"\n\n### Preservation of History\n        \nI was having difficulty the other day trying to get a simple two condition if statement to work. One of those days where you spend hours trying to get something to work and find out it was not working because there are four paths for a two conditions if statement and you were assuming the wrong two.\n\nAfter beating myself over the head in disgust about not getting this to work, I went back to history and remembered *AFOLDS, DUEL, DAD, and Frames*\n\nI will not go into detail because I'm not an expert and can't remember it all.\n\n### AFOLDS\n      \nAFOLDS stands for Air Force On-lined Data System. This was the Air Force's attempt to transition from a card punch data system to one that used *terminals*. It only ran on Burroughs main frame computers and I think was written in assembler. Since COBOL was the only language allowed (except for the real system coders who could use assembly), it had a lot of COBOL traits (sections, division, etc).\n\nThere were 3 or 4 parts to AFOLDS\n\n* DAD - Data Division. Like COBOL, all variables had to be typed in a data division. AFOLDS was based on a ISAM (Indexed Sequential Access Method) file structure an each element of a record had to be described. I think there were a few reserved name variables (IDX, IDX1). All local variable also had to be defined in the DAD - I think!\n\n* DUEL - Data Update Edit Language. This was the procedure division and what I'll concentrate on\n\n* Frames - This was the primary method of input and output on the terminal. Lets just say it was nothing more than an HTML form!\n\n* Retrieval - A report writer that could be used by the end-user to extract data out of an AFOLDS system. This is were I first ran across AFOLDS\n\n### DUEL\n        \nNow DUEL was one of the strangest languages I ever wrote in - but when I look back at it - it taught me more about logic than a lot of other things. This was a 80 column COBOL like input. I don't remember it all, but maybe something like this:\n\n``` ruby\n12345678901234567890123456789012345678901234567890123456789012345678901234567890\n######*Conditions                                              ################*\n\n```\nWhere \n* columns 1 through 6 were the card sequence numbers (in case you dropped your cards, you could sort them with a card eater - opps, card sorter - that often ate you cards and your work!)\n* column 7 was some kind of flag, probably defining a section or divison.\n* columns 8 through 73 is where you wrote your code\n* colums 64 through 79 is where you defined your *logic!*, more on that in a second\n* column 80 was some other kind of flag, maybe continuations or something.\n\nI'll leave off the line numbers in this example, and I know I don't have everything right (can't find any historical documentation). I'll just document my own version of the language based on how I remember it. There were two main sections (paragraphs) in the code:\n\n* Conditions - only contained boolean conditions\n* Actions - assignment, branching, etc\n\nI think each of these section had a section number. You can almost think of the as a simple if statement, but probably closer to a case statement.\n\nLets say I have two string variables Foo and Bar and based on the content of those strings I'll do certain actions. Now Foo and Bar had to be defined in the DAD, but lets just assume they were, maybe even set to a default condition.\n\n``` ruby\n12345678901234567890123456789012345678901234567890123456789012345678901234567890\n      *100 Conditions                                          ################*\n       Foo = \"start\"                                           YN-\n       Foo = \"stop\"                                            NY-\n       Bar = \"car\"                                             Y--\n       Bar = \"engine\"                                          -Y-\n      *Actions\n       goto 101  # start the car                               x\n       goto 102  # start the engine                             x\n       goto 103  # error condition                               x\n      *101 Conditions                                          ################*\n       actions and conditions to start car\n      *102 Conditions                                          ################*\n       actions and conditions to start engine\n      *103 Conditions                                          ################*\n       actions and conditions for error\n```\n\nThe logic area had three options:\n* Y or true\n* N or false\n* \\- don't care or nil\n\nThe compiler or interpreter looked at the boolean conditions (up to 16) and look for the first true path. If it found one would go to that action line and do the code there (where the x pointed to). If it didn't find a true path, it would fall through to the next paragraph - often not what you wanted.  This is a simple representation. I think the old COBOL periods (.) came in to play on each line. If the code did not end in a period, it would continue on the next line.\nI guess in Ruby this could be something like:\n``` c\ncase foo\nwhen \"start\"\n  if bar == \"car\"\n    startCar\n  elsif bar == \"engine\"\n    startEngine\n  else\n    handleError(\"bad bar\")\n  end\nelse\n  handleError(\"bad foo\")\nend\n```\n\nNow like all languages, there is a lot of room for error. The nil conditions were often misguided - you often cared about something and a misplaced - could kill you. You could forget that a condition existed and the code would go to the next paragraph, which is not where you wanted to go etc.\n\nThis history lesson goes back to my Nil post. Everything is either True, False or Nil and you have to handle all of them. Considering we are generating booleans, there is only true and false. If I have a boolean \"ok\", a simple DUEL condition would show the two paths\n\n~~~ ruby\nok      YN\n~~~\n.markdown","created_at":"2010-08-10T12:41:00.000Z","updated_at":"2022-04-23T20:23:00.834Z"},{"id":6,"title":"2010-07-20-Optional-arguments","category":"code","content":"\n\n### Passing optional arguments to a method\n\nAlmost everyone will `agree` that Active4D makes programming in 4D almost bearable. Most will also agree that **collections** and **libraries** are probably the most important ingredients.\n\nOne of the problems I've always had using the many powerful built-in library methods is remembering the position of parameters. For instance:\n\n ``` java\n$result := RowSet.newFromSelection($t{\"t_pointer\"}; $t{\"t_map\"};$batch;$callback;$name;$timeout)\n```\n\nEvery time I create a new circuit that will use Row Sets, I have to lookup the call. I can usually remember what the required parameters are, but if I don't have a call back and want to pass $name, I have to set $callback to \"\". Going back to my brief exposure to Pascal and Ada - those languages included the concept of named parameters. You could define a function:\n\n``` java\nprocedure demo(x:integer; y:integer);  -- procedure specification\n\n\ndemo(x=\u003e5, y=\u003e 3*45);\t\t-- when calling, associate formal \n\t\t\t\t\t-- and actual parameters.\n```\n\n\nBecause the association is made explicit (instead of the implicit association with positional parameters) there is no need to supply them in the same order as in the sub program specification. There is no restriction on the order in which named parameters are written. You can even mix named and positional parameters, providing the positional parameters are first.\n\n``` pascal\n\ndemo( y =\u003e 3*45, x =\u003e 5);\t-- the order of named parameters\n\t\t\t\t\t-- is irrelavent\n```\n\nIn newer languages you can accomplish the same thing by using hashes or collections in the case of Active4D. While it would break a lot of code, newFromSelection could have been defined using a collection.\n\n``` java\n$options := new collection(\"name\";\"myname\")\n$result := RowSet.newFromSelection($t{\"t_pointer\"}; $t{\"t_map\"};$options)\n// or\n$result := RowSet.newFromSelection($t{\"t_pointer\"}; $t{\"t_map\"};new collection(\"name\";\"myname\"))\n\n```\n\n\nNow I've never liked the \"new collection\" method using inline assignment and would usually revert to creating an empty collection and then assigning keys and values. I've been playing around with Ruby lately and it has something called a **symbol**, which is nothing more than a name starting with a colon (:somename). Ruby also uses a special assignment operator for hashes. The best definition I can find for a symbol that could relate to Active4d is:\n\n\u003ci\u003eSymbols are like constants whose name is their value. Just like the number 5 has both the name 5 and the value 5 so the symbol :howdy is the word howdy. It’s just like “howdy” but Better™\n\u003c/i\u003e\n\n\nIn Ruby the new collection would be something like:\n\n``` java\nresult = {:name =\u003e \"joe\", :cost =\u003e 400}\n```\n\n\nMaybe you don't agree, but I think the Ruby way is a lot clearer and more readable. So what if we created a library method \"opt\" that gave us something close to the Ruby symbol and kept operators you are familiar with?\n\n\n``` java\nmethod \"opt\"($argstring;$removelf=true)\n  \n  regex replace(\"/(\\\\s-\u003e\\\\s)/\";$argstring;\":=\";$string) // replace -\u003e with :=\n  $replace := \"return (char(34)+trim(\\\"\\1\\\")+char(34))\" // replace code to wrap symbol in quote\n  //replace symbol with string (:+chars upto a ; or : or = or newline)\n  regex replace(\"/:([a-zA-Z_\\\\.0-9\\\\-][^:=;\\\\n]+)/e\";$string;$replace;$string)\n  regex replace(\"/(:=|=\\\\\u003e)/\";$string;\";\";$string) // replace assignment with semicolon\n  if ($removelf) // for heredoc argstring\n    $string := replace string($string;\"\\n\";\"\")\n  end if\n  $result := execute('return(new collection($string))')\n  return($result)\nend method\n\n/***********************************************************************************\n  opt - wrapper on new collection(key;value[;key;value..])\n  $argstring  -\u003e  Text  Arguments for new collection either in standard format or symbol format for strings\n  $removelf   -\u003e  Boolean Optional argument to remove newlines from parsed $argstring\n                  Used if $argstring is a heredoc string. \n                  Turn off if not heredoc and a text value contains newlines\n  Allows the concept of symbols :some text {end of symbol character[:=;\\n]} would be parsed to \"some text\"\n  Allows your preference of an assignment operator [:= =\u003e -\u003e ] to be used between key and value\n   instead of ; Semicolon can still be used. The pointer operator (-\u003e) must be wrapped in whitespace\n  Example:    $c := opt(':firstname := :Steve; :lastname =\u003e :Alex; \"age\" -\u003e 65; \"city\";\"Gadsden AL\"')\n    Parsed to -\u003e  '\"firstname\";\"Steve\";\"lastname\";\"Alex\";\"age\";65;\"city\";\"Gadsden AL\"'\n    Returns as collection -\u003e execute('return(new collection(\"firstname\";\"Steve\";\"lastname\";\"Alex\";\"age\";65;\"city\";\n    \"Gadsden AL\"))')\n***********************************************************************************/\n\n```\n\n\n\n\nThis is nothing more than a wrapper on new collection where there is only one argument, a string. The single or double quoted string contains keys and values for the collection that is parsed and executed.  You can use symbols or strings for keys and values and use either \":=\", \"-\u003e\", \"=\u003e\", or \";\" as the assignment operator. Complicated explanation so lets demo: \n\n``` java\n//Start off with a new collection example\n$c := new collection(\"name\";\"steve\";\"age\";65;\"lives\";\"Gadsden AL\")\n\n// Lets say I put the method \"opt\" and a library \"u\"\n\n$c := u.opt(':name := :steve; \"age\" -\u003e 65; \"lives\";\"Gadsden AL\"')\n// or\n$c := u.opt(\":name := :steve; \\\"age\\\" -\u003e 65; 'lives';'Gadsden AL'\")\n// or being consistant!\n$c := u.opt(\":name -\u003e :steve; :age -\u003e 65; :lives -\u003e 'Gadsden AL'\")\n// or just using normal new collection stuff\n$c := u.opt('\"name\";\"steve\";\"age\";65;\"lives\";\"Gadsden AL\"')\n// or even using all symbols\n$c := u.opt(\":name -\u003e :steve; :age -\u003e 65; :lives -\u003e :Gadsden AL\")\n\n// and using opt to define optional parameters using the rowset example\n$result := RowSet.newFromSelection($t{\"t_pointer\"}; $t{\"t_map\"};u.opt(:name := :myname))\n\n```\n\n\n\n\nYes, there are too many options for the assignment operator, just didn't know what one I would like the best. I kind of like the pointer operator myself. Why'd I write this? Nothing else to do! I don't like typing shift-\" or even '! I like to see the difference between a key and a value in a new collection assignment. Putting stuff in strings may not be the best way, but it was the only way I could think of to get around 4D's syntax.\n\n### Part two - using the options.\n\nAgain, this won't work for existing library calls, but if you create a new method you just need logic to check for addition arguments. You don't even have to use \"opt\" - you can just use new collection to create optional parameters. Lets build a form helper for input, select and textarea tags - I hate doing those by hand. Copy and paste brings its own problems. In most cases you only need three items, the type of tag, the name of the tag and the value, if any. Lets define a method and put it in some library to help us.\n\n``` pascal\nmethod \"form_tag\"($type;$name;$value=\"\";$opt=0)\n  // build form tags for input, textarea, and select tags (select options passed in value)\n  $options := \"\"\n  $id := 'id=\"$name\"'\n  if ($opt)\n    $id := choose($opt{\"id\"};$opt{\"id\"};choose($opt{\"noid\"};\"\";'id=\"$name\"'))\n  \n    // build option attributes that were not handled above\n    for each ($opt; $key; $contents)\n      if ($key !~ \"(id|noid)\")\n        $options += ' $key=\"$contents\"'\n      end if\n    end for each\n  end if\n  case of\n    :($type = \"textarea\")\n      $tag := '\u003ctextarea name=\"$name\" $id $options\u003e$value\u003c/textarea\u003e'\n    :($type = \"select\")\n      $tag := '\u003cselect name=\"$name\" $id $options\u003e$value\u003c/select\u003e'\n    else\n      $tag := '\u003cinput type=\"$type\" name=\"$name\" value=\"$value\" $id $options /\u003e'\n    \n  end case\n  return ($tag)\nend method\n// lets build some tags with options\n\nwritebr( form_tag(\"text\";\"username\";\"salex\") ) // no options\nwritebr( form_tag(\"password\";\"password\";\"\";opt(':onchange := \"checksomething(this)\"; :class := :f-left twinkle ' )))\nwritebr( form_tag(\"textarea\";\"whatchadoing\";\"Once upon a time\";opt(':onchange := \"thatsnice(this)\"; :class := \"ugly\" ')))\n// you can use heredoc strings and format the options someething like doing a rowset map\n$heredoc := '''\n:onclick := \"x = setme(this);\n  $(x).value = fixme(x);\n  return false;\";\n:size := 50;\n:class := :pink;\n:readonly =\u003e true\n'''\nwritebr( form_tag(\"text\";\"readonly\";\"This is a readonly field\";opt($heredoc)) )\n$chk := 7 = 7\nwritebr( form_tag(\"radio\";\"isitme\";\"yes\";opt(':onchange := \"setme(this)\"; :checked := $chk; :noid =\u003e true'))+\"Yes\") \nwritebr( form_tag(\"radio\";\"isitme\";\"no\";opt(':onchange := \"setme(this)\"; :checked := not($chk); :noid =\u003e true'))+\"No\") \n$selopt := '\u003coption value=\"one\"\u003eOne\u003c/option\u003e\u003coption value=\"two\" selected=\"true\"\u003eTwo\u003c/option\u003e\u003coption value=\"three\"\u003eThree\u003c/option\u003e'\nwritebr( form_tag(\"select\";\"count\";$selopt) )\nwritebr( form_tag(\"submit\";\"update\";\"Update\") )\n\n```\n\n\n\nThat would produce:\n``` html\n\u003cinput type=\"text\" name=\"username\" value=\"salex\" id=\"username\"  /\u003e\u003cbr /\u003e\n\u003cinput type=\"password\" name=\"password\" value=\"\" id=\"password\"  class=\"f-left twinkle\" onchange=\"checksomething(this)\" /\u003e\u003cbr /\u003e\n\u003ctextarea name=\"whatchadoing\" id=\"whatchadoing\"  class=\"ugly\" onchange=\"thatsnice(this)\"\u003eOnce upon a time\u003c/textarea\u003e\u003cbr /\u003e\n\u003cinput type=\"text\" name=\"readonly\" value=\"This is a readonly field\" id=\"readonly\"  class=\"pink\" onclick=\"x = setme(this); \n   $(x).value = fixme(x);    return false;\" readonly=\"True\" size=\"50\" /\u003e\u003cbr /\u003e\n\u003cinput type=\"radio\" name=\"isitme\" value=\"yes\"   checked=\"True\" onchange=\"setme(this)\" /\u003eYes\u003cbr /\u003e\n\u003cinput type=\"radio\" name=\"isitme\" value=\"no\"   checked=\"False\" onchange=\"setme(this)\" /\u003eNo\u003cbr /\u003e\n\u003cselect name=\"count\" id=\"count\" \u003e\u003coption value=\"one\"\u003eOne\u003c/option\u003e\u003coption value=\"two\" s\n  elected=\"true\"\u003eTwo\u003c/option\u003e\u003coption value=\"three\"\u003eThree\u003c/option\u003e\u003c/select\u003e\u003cbr /\u003e\n\u003cinput type=\"submit\" name=\"update\" value=\"Update\" id=\"update\"  /\u003e\u003cbr /\u003e\n```\n\nHope this helps someone. You should be able to just copy and paste any of the code above and experiment.\n\n\n.markdown","created_at":"2010-07-20T12:41:00.000Z","updated_at":"2010-07-20T12:41:00.000Z"},{"id":5,"title":"2010-07-20-I-hurt-my-back","category":"other","content":"\n\n\n#### I hurt my back\nAbout a month and a half ago, I was tired from working on a money pit project, but I needed to cut the grass. When I pulled the mower out I saw that I had a front flat tire. I've been going through this since I bought this thing last year. My little air compressor does not have enough CFM volume to inflate a tubeless tire sitting on the ground. I tried to do what I've done several times in the last year - Pick up the front of the mower and put it on a block so that I could get the air compressor to work.\n\n***Crack!***\n\nNow why, at 65, do I think I can do anything is beyond me.  I guess it is just stubbornness! I knew I did something, but didn't know what, thinking I'll just worked through it. Drove to Birmingham the next day and could hardly get out of the car. This ,when I was supposed to drive to Pittsburgh the next day. After a few days, we started out and made it to Pittsburgh with relative ease. I felt it was getting better and the trip back, about a week later, was even easier.\n\nI thought I escaped another prognosis that could have been bad. Then it started a new trend. After laying and sitting for a period, no longer the back ache when I got up, the left hip started to stop functioning for about the first 10 minutes.\n\nMy wife convinces me to go see a Quack - okay Chiropractor. After some xrays, interview, an adjustments and $200 because they don't deduct the medicare - they send it to the Government! It felt okay, but didn't seem to do anything. About a week later the hip problem seemed to change a little with a differnt kind of ache. I went back to the Chiropractor and it did some other adjustments and now my tendons behind my knee ache!\n\nI think they call it sciatic nerve problems, but then it could be referred pain from probably arthritis in the hip.\n\nNow this all sucks. Spending too much time on the MacBook instead of the money pit. I waited about 5 weeks before I tried golf. I did okay, but a couple days later the aches moved again.\n\nGuess it is time to go to a real doctor - that's if I can find one that does not vision a Soylent Green world coming.","created_at":"2010-07-20T12:41:00.000Z","updated_at":"2022-05-14T18:45:31.253Z"},{"id":4,"title":"2010-07-10-Saturday-and-no-golf","category":"golf","content":"\n\n\n#####  Just a short history about me and golf.\n\n\u003cimg style=\"margin-right:6px;float:left;\" class=\"float-left inline-block\" src=\"/images/iwicw/me.png\" alt=\"\" width=\"200\"/\u003e\n\nI think the first time I played golf was in about 1963-64. I had come home on leave from the Air Force and one of my friends was caddying in the summer and took up golf. We played a new local course about a mile from my home. I don't remember much about it except it was not easy.\n\nSeveral years later I was stationed at George AFB, Victorville CA and remember trying to take up the game. Again, it was not easy. For about the next 10 years I made other attempts to play the game, mainly when invited to play with someone who was into the game. Not being very athletic (maybe no athletic ability would be a better description!), I didn't get far. I remember trying to play at a course in Ubon RTAFB in Thailand during the Vietnam war. Not much more than a pitch and putt course - sand greens, tall weeds between green and tee, snakes, bugs, etc. It was also about a mile from the Laotian border.\n\nWhen I attended Navigator training at Mather AFB, Sacramento Calif in 1973, my house bordered the golf course and I tried again - even bought a club - a Sam Sneed blue ridge 2 wood. Again, no joy but I knew sooner or later I would figure the thing out. Even got to play once with my paternal father, who I met for the first time about 10 years earlier. Played a few times at Langley AFB, Virginia (1974-75) and at McChord AFB, Washington (1975-79), but it was not until I was stationed at Gunter AFS, Montgomery Alabama (1980-84) that the bug hit.\n\nI knew I was going to get out of the Air Force soon and needed to do something else other than work my ass off. I was invited to play in intramural golf as more or less a courtesy to the boss (me). They probably wished that they had not have invited me because I still was not very good.  I did get to see what being good was like and made up my mind that golf was going to be my hobby. That was in about 1983. I've been playing at the Cypress Tree Golf course on Maxwell AFB ever since.\n\nStill have not achieved good - and probably never will, but a 12-15 handicap is livable. \n\nWhy will I never achieve \u003cstrong\u003egood\u003c/strong\u003e? Because a major motto that I live by is that you can always do something better. I don't think you can ever achieve perfection, you can just get better.\n\nIt's been almost two years since I retired, and as pointed out in The Money Pit posts, golf has had to take a back seat for a while. I've probably only played about once a month since retiring.  That is a lot different from someone who played twice a week for probably 48 weeks a year. I've played a few times in Gadsden, but hope to play a little more with at least some of the burden of having two homes to take care of off my mind. \n\n ","created_at":"2010-07-10T12:41:00.000Z","updated_at":"2022-05-12T18:11:15.992Z"},{"id":3,"title":"nil and Life","category":"thoughts","content":"\n\nI guess I could put this in the Rails or Ruby category but it touches a lot of stuff - that is why it is Stuff.\n\nThis is an eMail I sent my former staff (really friends - at least they understand me!) back in April. I had just found out that some work I was doing for my former employer could not be implemented (or paid for) until next year - ethics stuff. A little discouraged I went off in other directions. Thought I'd post this for the heck of it.\n\nh3. What I learned today.\n\nFirst off, I hope everyone has/had a Happy Easter. It is a fitting day to answer my own question. I'll try not to take too long on this and see if I can be a little more concise - but I will probably bounce between geek talk, religion and politics!\n\nNil!\n\nThat is what I learned - well maybe now understand a little better. And nil is having a profound affect on me.\n\nWith the barrier that came up last week, I decided to do a little playing with RoR. Taking what I learned from building Restful Active4D, I took a little saner approach. Remember I initially converted my xml assessment stuff to RoR, then knowing that RoR was still a concept, I ported my RoR work to Active4D - and then tuned it. I decided to take the tuned version and port it back to RoR. I fixed up the nifty-scaffold generator templates to build saner templates that were more adaptive to CSS. Beside re-learning what I forgot, it only took a few hours to create the Restful CRUD application. I then started looking at the display and score processes and needed better data, so I imported the tables from 4D to RoR. That is when nil came up again.\n\nYou have all heard me say many times, \"There are only 0's and 1's\". At the machine level, that is a correct statement. In life there is true, false and nil - or unknown. In fact, I'm not even sure about true and false anymore. When the data was converted from 4D, the routine would create NULL elements. If you try to display a NULL element in RoR, it produces an error \"Can't convert nil to string\". I've dealt with this before but just kind of ignored it by testing for both \"nil?\" and \"empty?\". This time a I did a little research to find the best way to test for the condition and then it hit me - Many questions in life can only be answered with nil! Is there a God? Will Obama destroy our country? Is the address blank or was it never defined?\n\nNow I hated philosophy - it was the only course I failed in college. I actually enjoyed the lectures, but didn't like to read and would get questions like \"Who said xxxx\"  on a test and would have no earthly idea.  I guess the philosophers spent most of their time trying to define what was true, false or unknown. In life our beliefs are nurtured by our teachers in life. There was a special on Fox New this weekend \"The Passion: Facts, Fictions and Faith\". I didn't watch it, it was just in the background but it started me to think about nil again!\n\nThen there is Glenn Beck's latest diatribe on what is happening to our country (allowing progressives to get in power) and his counter with \"Faith, Hope and Charity\".  Before you go off making conclusions, Faith does not mean that God will throw Obama out of office - it is more that we have to have Faith in ourselves and our country that our checks and balances will right the ship.\n\nRuby, by having nil (as do other languages), allows you to develop software closer to life. If you define a boolean in 4D, it sets the default to 0.   Accepting defaults (There is no God, or God exists) is what has killed millions of people in the world. We Hope we never will see another Stalin, Hitler, or Mao again - but power corrupts and it will happen again - but I have Faith that it will not be on a large scale and Hope it will be fixed.\n\nAfter having these philosophical thoughts running threw my head for the last week, I have not changed - but I think a little more. I don't know if there is a God, but having faith in something has to be better than nothing! I heard a line this morning from someone reporting from Afghanistan that I've heard many times before - \"*You'll never meet an atheist in a foxhole*\".\n\nThis is long enough. I was going to go into functional programming to get to the truth, but I'll save that for another time!\n\nSteve\n\n.textile","created_at":"2010-07-09T12:41:00.000Z","updated_at":"2022-05-14T18:51:25.477Z"},{"id":1,"title":"2010-07-08-reflections-on-the-slew","category":"moneypit","content":"\n\n\n###  What a nice view.\n\n \u003cimg src=\"/images/iwicw/shapeimage_6.jpg\" alt=\"\" /\u003e\n\nIt is just too bad that when I turn \u003cs\u003earround\u003c/s\u003e around I see the money pit!\n\n\u003cimg src=\"/images/iwicw/mp-front.jpg\" alt=\"\" /\u003e\n\nIt still does not look bad, but...\n\n\n####  I though I had this all figured out\n\n* 22 Years in the Air Force (pension)\n* Several years as a Software Consultant\n* 20 Years working for the State of Alabama (pension)\n* 65 Years old (SS)\n* A nice house in Montgomery AL (paid for)\n* Very little debt\n* Golf game actually getting better.\n\n\n####  But no, the kids say \"You should buy a lake house so we can come and visit\"\n\nSo we go buy a 3300 square foot house on a slew off the Coossa river in Gadsden Alabama. The house seems like it has less room than our 2200 square foot house in Montgomery (yea I need a 12x28 dinning room when King Arthur and his court come to visit!). We moved in about a year ago after about 8 months of trying to fix it up = no golf:-(\n\nDo you realize that almost everything that needs to be done costs about $7,000! Fine if I could sell the house in Montgomery. Yea you can try to blame it on Bush, and you'd be right - for him letting Dodd and Frank destroy our economy.\n\n* New roof = $7,000\n* New kitchen = $7,000\n* New window = $7,000\n* New floor = $7,000\n* New heat pump = $7,000\n* New ducting = $2,000 (there are exceptions!)\n* New carpet = $3,000\n\nI've managed to do half the windows and some of the flooring. I am at a standstill and bored cutting 2 acres of grass (Oh yea, 5k for a new lawn mower!). \n\nIt was 96 degrees here yesterday. Last July I had a $480 electric bill and it was hot in the house. After R38 in the attic, half of the windows, new vents, etc, the AC couldn't keep the house at 76 - it crept up to 78. I'll probably get another high electric bill.\n\nAgain, not sure where I'll go with this post - we'll just have to wait and see. There is some hope, we may have rented the house in Montgomery - never did that before, but I've heard the horror stories.\n\n \n\n\n\n.textile","created_at":"2010-07-08T14:53:00.000Z","updated_at":"2022-05-12T11:55:29.237Z"},{"id":2,"title":"2010-07-08-simple-authorization","category":"code","content":"\n\nh3. Simple Authorization\n\nSimple Authorization is just what the name implies — for Active4D.\n\nIt is patterned after a ruby plug-in “Declarative-Authorization”. It is not a full implementation, but close. I also stole a few things from another ruby plug-in CanCan, that stole from Declarative-Authorization! Simple Authorization is implemented as an Active4D library auth.\n\nh3. From the declarative authorization plugin:\n\nThe declarative authorization plugin offers an authorization mechanism inspired by RBAC. The most notable distinction to other authorization plugins is the declarative approach. That is, authorization rules are not defined programmatically in between business logic but in an authorization configuration.\n\nh3. Authorization Data Model\n\n\u003cpre\u003e\n  \u003ccode\u003e\n   \n.textile","created_at":"2010-07-08T12:41:00.000Z","updated_at":"2010-07-08T12:41:00.000Z"}]